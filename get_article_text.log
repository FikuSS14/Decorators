Дата вызова функции: 2025-01-14 22:31:16
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873656/',), {}
Возвращаемое значение функции: Страх перед изменениями, «боли» клиентов и отсутствие времени на себя, - такой часто представляют себе жизнь «айтишников» обыватели. Отчасти это действительно так. Но на самом деле  большинство специалистов IT-сферы понимают, что для сохранения продуктивности и креативности отдых и релаксация им жизненно необходимы. Обеспечить качественный отдых (и не только)  поможет правильное хобби.  Каким оно может быть и как может повлиять на продуктивность специалистов этой сферы? Давайте разбираться на примере компании «Логасофт Плюс».СпортОдним из самых популярных способов расслабиться для  подавляющего большинства сотрудников компании является фитнес. Поэтому, даже несмотря на постоянную занятость и стресс, на занятия фитнесом находят время 3/4 коллег.Тон в этом направлении задает генеральный директор: «Спорт делает нас более устойчивыми к стрессу, вызванному высоким темпом работы и общением с различными контактными аудиториями».С этим согласна специалист по электронному документообороту Ирина П., которой это увлечение помогает  поддерживать физическую форму и расслабляться после работы. «Спорт воспитал во мне целеустремленность и непоколебимую уверенность в себе, научил меня открыто выражать свои эмоции, проявлять твердость и упорство, никогда не показывать свой страх и ничего не бояться, - рассказывает девушка. – А участие в чемпионате области по бодибилдингу зарядило меня энергией.  К тому же уверенность в том, что я отлично выгляжу, помогает  мне чувствовать себя более уверенно в общении с клиентами».Сплавы на байдаркахИнженера отдела инженерно-технологического сопровождения (ИТС) Дмитрия привлекают сплавы по рекам на байдарках: «Они позволяют удалиться из мира людей в мир природы и спокойно плыть по воде, наслаждаясь тишиной и красивыми видами. Это отличная возможность переключиться и ощутить прилив энергии».Тем, кто хочет познакомиться с байдаркой, Дмитрий Б. советует: «Во-первых, не бояться. Во-вторых, взять лодку в аренду и попробовать. В-третьих, есть организованные групповые сплавы с инструктором - попробовать можно и так. Помните: чтобы байдарка держалась на плаву, гребцов должно быть двое и грести нужно постоянно. Поэтому тщательно выбирайте спутника - паникёрам и нытикам в походе не место!»Соло-походыС ним согласен и его коллега Алексей Т., который предпочитает соло-походы и в одиночку покорил Кавказскую тропу протяженностью более 250 км: "Тропа - это инструмент познания самого себя. Идешь и погружаешься в себя, созерцая окружающий тебя мир. Задаешься вопросами о смысле жизни. Получаешь удовольствие от ходьбы и преодоления препятствий. Я стал понимать, почему люди уходят в походы на недели и даже месяцы. Жалею только, что путешествие оказалось таким коротким: только "расходился", а оно уже закончилось".Парикмахерское искусствоНаходить индивидуальный подход к клиентам, объяснять, убеждать и аргументировать свою точку зрения учит хобби программиста Юлию П. Ведь она стала домашним парикмахером и  уже 4 года экономит семейный бюджет, подравнивая волосы и заплетая объемные косы подругам и коллегам.Написание рассказовОднажды чья-то история из жизни подтолкнула к написанию первого рассказа ведущего специалиста по продажам 1С Анну К.:«После публикации в интернете рассказа «Почтальонша» я получила десятки положительных отзывов: более 500 человек дочитали рассказ до конца, кто-то ждал продолжения, а кто-то высказал подозрения, что я выдаю чужой рассказ за свой (это мне особенно польстило)… Позитивная реакция читателей воодушевила меня и вдохновила на создание новых произведений». Сегодня интернет-канал Анны насчитывает около тысячи подписчиков и десятки рассказов: «Клопиха», «Колдунья поневоле», «Наследница», «Сделка с Шапокляк», «Лотерея», «Саван для барина» и многие другие. Рассказы сопровождаются уникальными картинками из нейросети, которые привлекают внимание читателей. Их герои – обычные люди. Сюжеты сотканы из хитросплетений добра и зла, и каждая история так искусно приправлена мистикой, что держит в напряжении и до самого конца не отпускает читателя.«Благодаря филологическому образованию я приобрела качества, которые очень пригодились мне в работе с клиентами: умение структурировать и выражать свои мысли, грамотно писать и говорить, слушать и слышать. А главное - умение обрабатывать огромные объемы информации в короткие сроки. Как говорили нам преподаватели: «Мы готовим таких специалистов, которые за ночь выучат китайский язык, если потребуется». И это действительно так".Создание электронной музыкиСамый популярный его трек набрал 15 000 прослушиваний в соцсети для музыкантов со всего мира, а еще один — попал в альбом популярного рэпера из Англии.«Это чистая правда, — рассказывает инженер ИТС и битмейкер Никита Б. — На один из моих треков записался музыкальный коллектив из США, а еще один мой бит при записи своего альбома использовал рэпер из Англии. И потом прислал этот диск мне в подарок. С тех пор мы регулярно общаемся».Первый бит Никита решился выложить на сайт soundcloud.com — социальную сеть для музыкантов со всего мира, в 2015 году. Постепенно на его профиль «01:43 а.m.» стали подписываться музыканты и предлагать написать что‑нибудь вместе. Так родились несколько совместных проектов с битмейкерами из США, Нидерландов и Англии. «Чтобы записать собственный бит, нужно знать основы психоакустики, физики звука и синтеза звука, не говоря уже о владении специальными программами, например, FL Studio, Bitwig, Renoise, Studio One, — рассказывает Никита. - Благодаря своему хобби я погрузился в историю звукозаписи, изучил и освоил основы создания электронной музыки. Мое хобби развивает наслушанность, музыкальную «толерантность» и, конечно, кругозор».Интеллектуальные игрыИнженер техподдержки Ирина Н. регулярно посещает интеллектуальные игры. «Они дают мне все: общение, признание, похвалу, поддержку. Участие в интеллектуальных турнирах заставляет мозг работать и видеть мир по-другому. Я начала много читать, тренировать память, запоминать новые факты. Сложные вопросы заставляют меня углубляться в узкие темы, чтобы восполнить пробелы в знаниях. Вот так же углубляюсь и на работе в программу 1С, - делится опытом Ирина. -  А еще викторины, квизы и "умные" игры развивают навыки лидерства, самодисциплины, помогают расширить круг знакомств и найти новых клиентов. А главное - учат слушать и слышать собеседника, что очень помогает мне в общении с клиентами.Кстати, благодаря общению с другими людьми я поняла, что к решению проблем и ситуаций могут быть вариативные подходы, отличные от тех, к которым я привыкла. И теперь я успешно пользуюсь ими в профессиональной деятельности».Стендовое моделированиеПомощник генерального директора Иван С. уверен, что его хобби - стендовое моделирование - это отличный способ развития технического творчества и внимания к деталям.Вернуться к детскому увлечению в зрелом возрасте его заставила острая необходимость в реабилитации мелкой моторики.«Чтобы сделать модели военной техники правдоподобными, я изучаю военную историю, особенности техники времен Великой Отечественной войны, приемы маскировки и т.д. Это не только помогает в процессе создания моделей, но и расширяет кругозор, внутренне обогащает и рождает дополнительные темы для общения с сыном, - рассказывает моделист. - Было забавно наблюдать, как он расставлял мои модели, своих игрушечных солдатиков и командовал этой маленькой армией! И хоть это увлечение достаточно затратное по времени и материальным ресурсам, приобрел я гораздо больше: устойчивый интерес к истории нашей великой Родины, науке, техническому творчеству и уважение сына. А это, согласитесь, намного важнее».РыбалкаИнженер отдела ИТСКсения Г. убеждена: «Рыбалка отлично влияет на работу. Приезжаешь на свежий воздух, голова перезагружается, и заряда энергии хватает на всю неделю!»«Если бы не рыбалка, я был бы совсем другим человеком, — так считает ее руководитель и основатель Федерации рыболовного спорта Вологодской области Евгений Т. — Опыт создания федерации „окунул“ меня в менеджмент и помог раскрыться как руководителю на основном месте работы, в IT‑компании. Оказалось, что в бизнесе, как и в рыбалке, наиболее успешны те, чья команда более гармонична, и где роли распределены правильно. Опыт руководства федерацией научил меня вместе искать и пробовать новые подходы, взвешивать риски и договариваться». Рыбалка до сих пор помогает ему находить единомышленников среди своих коллег и подчиненных, которых он обучает секретам рыбной ловли с особым удовольствием: «Когда коллеги достигают успеха, я всегда чувствую гордость за них. Я за то, чтобы они становились лучшей версией себя».И что с того? Любой руководитель  в сфере IT понимает, что человек, который переключается с работы на увлекательный досуг,  заботится о физической форме, исследует что-то новое, расширяет круг знакомств. Поэтому и работать он будет эффективнее, без выгорания и желания срочно менять сферу своей деятельности.К тому же, правильное хобби не только помогает айтишнику избавиться от страхов и стресса, но и всегда приносит  с собой новые полезные знания, навыки и связи, помогая в работе и являясь дополнительным аргументом в вашу пользу в глазах работодателя.
****************************************

Дата вызова функции: 2025-01-14 22:31:17
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873648/',), {}
Возвращаемое значение функции: Может кто-то сталкивался с таким парадоксом, но я ничего не нашел похожего.Проблема вот в чем. Мы не можем представить себе что-то физически бесконечное. Если распространить эту идею на наш мир, то по нашему восприятию он должен быть ограничен. Пусть будет некий пузырь. Где наша вселенная или ещё какие-то вселенные, или это вообще «бублик». Таким образом появляется граница и вроде бы все это можно представить.  Но есть проблема, за пузырём ничего нет. Как можно представить абсолютно ничего? Никак, по нашему восприятию там должно быть что-то. Тогда значит расположим за пузырём что что ещё, например другой пузырь. Но следуя этой логике мы создаём бесконечность, которую опять невозможно принять. И не надо пытаться притянуть тут математику, где бесконечность обычное дело. Бесконечности в математике это всего лишь инструмент, например для вычисления интегралов, когда ищем предел для суммы бесконечной последовательности. Представить дополнительное измерение ещё как-то со скрипом, но можно. Но не бесконечное или абсолютное отсутствие пространства. Возможно просто у человека нет такого органа чтобы это воспринять. И основная загвоздка не в правдивости какой-то модели, а даже в невозможности её построить нашим умом. Невозможность как бесконечности, так и ограниченности. Наверно есть что-то посередине и совсем другое.
****************************************

Дата вызова функции: 2025-01-14 22:31:17
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873644/',), {}
Возвращаемое значение функции: Обложка циклаВ продолжение цикла статей Отладка сервера для самых маленьких, сегодня мы познакомимся с различными операционными системами и процессом их установки. Особое внимание было уделено созданию разделов (partition) на дисках, было много перечитано и переспрошено, чтобы понять, для чего надо отделять, сколько памяти выделять и, самый главный ответ на вопрос, зачем и в каком случаи. Мы обсудили, какие разделы стоит выделять, а какие не являются необходимыми. Кроме того, мы немного углубимся в теорию, чтобы лучше понять, как это работает.Принципы автора при настройке и работе сервера и не только:Безопасность системы и сетиБыстрый ответ системы и ее службМинимальное количество пакетов (программ), только нужноеУнификация, зависимость приложений.Оглавление цикла(Обновляемое)НачалоВыбор и установка операционной системыОглавление статьиОперационные системыВ цикле и опыт / мнениеУстановка Debian 12 BookwormПолезные материалыЕсли интересует только разбивка разделов, читать пункт 7.Операционные системыНачнем с определении:Ядро операционной системы (kernel) — это основная часть программного обеспечения, которая управляет аппаратными и программными ресурсами компьютера, обеспечивает взаимодействие между ними и предоставляет базовые функции для работы других программ. Примеры: GNU Linux, Windows NT, FreeBSD, XNU, Minix. Операционная система (ОС) — это программный комплекс, включающий ядро, системные утилиты, драйверы и пользовательский интерфейс, который обеспечивает удобную среду для работы пользователя и запуска приложений. Примеры: Windows, macOS, Linux, Android, iOS.Дистрибутив — это готовая сборка операционной системы, которая включает в себя ядро, системные утилиты, библиотеки, драйверы и различные дополнительные программы. Дистрибутивы предназначены для того, чтобы облегчить установку и использование ОС, предоставляя пользователю уже настроенное, полное и функциональное решение. Примеры: Ubuntu, Debian, Fedora, Windows, macOSОперационные системы, ориентированные на сервер, обычно поставляются без графического интерфейса, только консоль:Дистрибутивы основаны на GNU/Linux ядре. Такие как Debian, Ubuntu, CentOS, Red Hat Enterprise Linux и т.д. Больше дистрибутивов на Linux Distribution Timeline.Дистрибутивы основаны на FreeBSD. Такие как TrueNAS CORE.Windows Server.Хоть и не является операционной системой, но дает полный доступ к системе, проект CasaOS, отличается friendly-user интерфейсом и легкой установкой любого программного обеспечения (использует Docker).В цикле и опыт/мнениеВ качестве операционной системы в цикле используется Debian версии 12 (Bookworm). Почему именно Debian, а не Ubuntu или другой дистрибутив?Debian — это минимальный дистрибутив без лишних пакетов. Кроме того, он отличается стабильностью. Все репозитории с пакетами содержат стабильные версии, что способствует минимизации проблем с зависимостями между приложениями. По другим дистрибутивом на GNU/Linux ядре ничего сказать не могу, опыта нету. То же самое могу сказать об ОС на ядре FreeBSD.Windows Server у меня не в почете, плюс надо лицензию иметь. В общем, для операционных систем серверов используются дистрибутивы на основе ядра GNU/Linux, такие как упомянутые ранее Debian, Ubuntu и CentOS.Установка Debian 12 BookwormПроцесс установки Debian ничем не отличается от установки Windows в общих чертах, пример установки в качестве домашней ОС (статья):Cкачиваем образ с официального сайтаПрошиваем флешку.Вставляем в сервер. Открываем BIOS, в качестве загрузочного раздела выбираем флешку (обычно маркируется как USB). Сохраняем. Выходим.Встречает нас окно GRUBа (загрузчик операционной системы), выбираем Install. Разница между Install и Graphical install в том, что в одном используется только клавиатура, в графическом — как клавиатура, так и мышка. Я предпочитаю Install, потому что работа с сервером происходит только через командную строку по этому привыкаем к такому вводу.Выбираем язык, я предпочитаю англ. так как мануалны для IT написаны на англизком языке.Дальнейшим пунктам комментарии не нужны. Единственное, в окне выбора domain name вы можете указать существующее доменное имя, если оно у вас есть, или же придумать новое (оно будет доступно только в локальной сети), или отставить пустым. Это FQDN-имя помогает системе идентифицировать себя в сети.Подходим в важному пункту, подготовка разделов. Нас встречает меню Partition disksGuided - быстрая настройка разделов, потом можно изменитьManual - ручная настройка разделовВыбираем ManualФорматируем диск/иФорматириваоние диска - это процесс подготовки устройства хранения данных (такие как жесткий диск). На диск записываеться таблица разделов, есть два типа MBR (устарел) и GUID (актуальный).Результат:Создаем разделы (partition)Раздел диска - это логическая часть физического накопителя, которая выделена для хранения данных и управления ими. Каждый раздел воспринимается операционной системой как отдельное устройство хранения, даже если физически он находится на одном диске. На раздел записываеться файловая система, такие как ext4, UFS и exFAT и т.д. Для лучшего понимание это диск С или D на Windows. Пример структуры UFS (Unix File System):Какие разделы обязательные:/boot или /boot/efi раздел - минимально 250 MB, рекомендую 512 MBswap раздел - минимально 2 GB, в общем считается по этой формуле SWAP memory = RAM memory * 1,5 (или 2)SWAP раздел - это дополнительная/"виртуальная" память, которая выделяется на диске и используется CPU как RAM. Формулу лучше использовать, если планируете использовать гибернацию (перемещение данных RAM в SWAP при уходе в сон). Так, если у вас 16 GB RAM, будет достаточно 4 GB (подробнее смотрите рекомендации от Red Hat)./ root (или корневой) раздел - минимально 250 MB (рекомендация от Red Hat), по моему мнению как минимум 50 GB. Лучше 100 GB.Какие разделы рекомендуется отделять от root раздела:/var раздел в основном используется для хранения логов (logs) - минимально 384 MB (рекомендация от Red Hat), по моему мнению 50 GB достаточно. Его я бы отделил точно, логи с большой вероятностью могут переполнить / ./tmp раздел хранит временные файлы, пример если загружаете файл в папку /home/user/ сначала он загружается в /tmp потом /home/user/. Минимально 50 MB (рекомендация от Red Hat), по моему мнению, 15 GB будет достаточно, всё зависит от максимального размера загружаемого файла. Нужно отделять, только если есть отдельный очень быстрый NVMe диск или будет постоянная загрузка больших файлов. В моем случае не отделял./home раздел для хранения пользовательских данных, в основном забивается на домашних ОС или если используется для хранения информации, используя протоколы SMB, FTP, SFTP и т. д. Минимально 100 MB (рекомендация от Red Hat), реальный размер определяете сами. В моем случае не отделял.Какие разделы рекомендую создать и отделить от root раздела:/svr - используется для хранения данных сервисами, я вместо него создал /data для хранения данных и поместил на жесткий диск ( папки /data нет в стандартной структуре файловой системы Linux (подробнее)).Если вы планируете использовать сервер в качестве медиасервера и загружать на него сотни гигабайт медиафайлов, я рекомендую выделить для этой цели отдельный раздел. В разделе /data будут храниться другие данные, такие как ваши файлы, базы данных и так далее. Если вы не рассчитаете объем заполняемого медиа, то можете переполнить раздел, и будет неприятно потом его чистить.Зачем разделять root раздеть / ? Делается для того чтобы изолировать саму ОС и файлы которые хранятся на ней. Решает две проблемы: если папка /var переполнится к примеру то система не упадет; переход на другую ОС или обновление текущей не повлияет на данные, которые находятся в других разделах.С файловой системой не заморачиваемся и выбираем ext4.Создание bootСоздание swap (пропуская повторяющийся окна)Отделение /varСоздание /Создание и отделение /dataРезультат:Подтверждаем разметку и записываем разметку на диск.Разметка разделов в моем случаи:По поводу других настроек:Конфигурация RAID отлична описана в этой статье.Logical Volume Manager (LVM) — это инструмент, который позволяет объединить несколько физических дисков в один логический том. К примеру, есть два диска, на первом устанавливаете boot, swap и root и т. д. В конце концов у вас остается место на диске, и вы хотите объединить со вторым, полностью свободным диском и на них к примеру поставить раздел /data. Для этого вы создаёте логический том (LVM) из двух дисковых пространств и используете раздел /data так, как будто он установлен на один диск.Шифрование диска. Если вы полагаете, что существует вероятность несанкционированного доступа к вашим дискам, то имеет смысл их зашифровать. В противном случае, если вы не ожидаете никаких проблем, то нет необходимости в дополнительной защите. Дома же стоит.Потом спрашивают если ли дополнительная флешка с пакетами выбираем - Нет Дальше обязательно выбираем зеркало для пакетовЕсли у вас есть proxy сервер, можите указать если нету, оставляем пустым: Потом предлагают делиться анонимно аналитикойПод конец предлагают установить дополнительные пакеты (в том числе графические оболочки), нам только нужно SSH server и стандартный набор системных утилит (standard system utilities), по понятным причинам графическая оболочка не нужна, это сервер. После установики дополнительных пакетов. Перезагружаем системуОткрываем BIOS и в качестве загруженного диска выбираем диск на который установили boot и / разделы. Сохраняем и выходим.После успешной загрузки системы вытаскиваем флешкуУстановка ОС закончена.Полезные материалыHabr.com - Сравнение структур разделов GPT и MBRRedhat.com - Recommended Partitioning SchemeHabr.com - Комфортная работа в Linux. ZRAM и гибернация — особенности взаимодействия
****************************************

Дата вызова функции: 2025-01-14 22:31:17
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873638/',), {}
Возвращаемое значение функции: Простая система частиц на SFML C++Приветствую всех, кто интересуется графикой и программированием! Сегодня мы погрузимся в увлекательный мир создания систем частиц с помощью библиотеки SFML на C++. Эта тема открывает широкие возможности для визуализации различных эффектов, от простых искр и дыма до сложных взрывов и магических заклинаний в играх и других приложениях.Системы частиц — это мощный инструмент для генерации динамических визуальных эффектов. Они основаны на идее создания множества мелких объектов (частиц), каждый из которых обладает собственными параметрами, такими как положение, скорость, цвет, размер и время жизни. Управляя этими параметрами, можно добиться самых разнообразных результатов.Создадим отдельный класс для управления системой частиц.Назовём его ParticleSystem. Ниже реализация кода данного класса.#pragma once

#include <SFML/Graphics.hpp>
#include <vector>


struct Particle {

    sf::Vector2f velocity;     

    sf::Vector2f position; 

    sf::Color color;           
};


class ParticleSystem : public sf::Drawable, public sf::Transformable {

public:

    ParticleSystem();

    
    void addParticle(sf::Vector2f position, sf::Vector2f velocity, sf::Color color);

    
    void update(sf::Time elapsed, sf::RenderWindow& window);

private:

    std::vector<Particle> particles;   
    
    sf::VertexArray vertices;         

    virtual void draw(sf::RenderTarget& target, sf::RenderStates states) const;
};

Опишем свойства и методы класса ParticleSystem.Класс наследуется от классов библиотеки SFML:Drawable - позволяет объектам класса ParticleSystem быть нарисованными с помощью метода window.draw, переопределяя метод draw;Transformable - позволяет использовать трансформации, в нашем случае перемещение для всей системы частиц.Публичные поля.Конструктор класса - инициализирует систему частиц.Метод addParticle добавляет новую частицу в систему.Параметры данного метода:position  - начальная позиция частицы;velocity  - вектор скорости;color  - цвет частицы.Метод update - обновляет состояние всех частиц.Параметры метода:elapsed - время, прошедшее с момента последнего обновления, используется для корректного перемещения частиц;window - cсылка на графическое окно, для проверки, находятся ли частицы внутри границ окна.Приватные поля. Контейнер вектор particles для хранения всех частиц. Каждая частица представляет собой объект структуры Particle.Массив вершин vertices, представляющий графическое отображение всех частиц. Связывает частицы с их визуальными атрибутами это позиция и цвет.Виртуальный метод draw. Это переопределённый метод от класса Drawable, отвечающий за отрисовку частиц.Далее реализовываем методы данного класса. #include "ParticleSystem.h"

// Конструктор
ParticleSystem::ParticleSystem() {
    vertices.setPrimitiveType(sf::PrimitiveType::Points);
}


void ParticleSystem::addParticle(sf::Vector2f position, sf::Vector2f velocity, sf::Color color) {
    Particle particle;
    particle.position = position;
    particle.velocity = velocity;
    particle.color = color;

    particles.push_back(particle);

    sf::Vertex vertex;
    vertex.position = position;
    vertex.color = color;
    vertices.append(vertex);
}


void ParticleSystem::update(sf::Time elapsed, sf::RenderWindow& window) {

    std::vector<Particle> updatedParticles;
    sf::VertexArray updatedVertices(sf::PrimitiveType::Points);

    for (std::size_t i = 0; i < particles.size(); ++i) {
        Particle& particle = particles[i];
        particle.position += particle.velocity * elapsed.asSeconds();

        if (particle.position.x >= 0 && particle.position.x <= window.getSize().x &&
            particle.position.y >= 0 && particle.position.y <= window.getSize().y) {
            updatedParticles.push_back(particle);

            sf::Vertex vertex;
            vertex.position = particle.position;
            vertex.color = particle.color;
            updatedVertices.append(vertex);
        }
    }

    particles = std::move(updatedParticles);
    vertices = std::move(updatedVertices);
}

void ParticleSystem::draw(sf::RenderTarget& target, sf::RenderStates states) const {
    states.transform *= getTransform();
    target.draw(vertices, states);
}
Конструктор ParticleSystem устанавливает тип графического примитива массива вершин как "точки". Это значит, что каждая вершина будет отрисовываться как отдельная точка на экране.Метод добавления частицы addParticle. Добавляет новую частицу в систему. Создаёт объект Particle, в который записываются: позиция, скорость, цвет. Этот объект добавляется в массив particles т.е. вектор всех частиц. Создаётся вершина vertex, которая определяет: позицию частицы и цвет частицы. Эта вершина добавляется в массив vertices, чтобы позже её можно было отобразить.Метод обновления частиц update. Обновляет позиции частиц и удаляет те частицы, которые вышли за границы окна. Создаются временные контейнеры:updatedParticles - для хранения обновлённых частиц;updatedVertices - для хранения новых вершин, соответствующих обновлённым частицам.Цикл перебирает каждую частицу из вектора particles. Вычисляется новое положение частицы. Если новая позиция частицы находится в пределах границ окна: Частица добавляется в updatedParticles. Создаётся соответствующая вершина, которая добавляется в updatedVertices. После завершения цикла, cтарые массивы particles и vertices заменяются на новые с использованием move для оптимального переноса данных.Метод отрисовки draw отвечает за отрисовку системы частиц на экране. Метод является переопределением функции draw из класса Drawable. Конструкция states.transform *= getTransform() применяет текущую трансформацию, например позицию к нашей точке, перед отрисовкой. Далее target.draw(vertices, states) отрисовывает массив вершин vertices на целевом объекте target т.е. RenderWindow.В следующем коде используем данный класс для реализации эффекта фейерверка т.е. распыления частиц в разные стороны, пока  будет зажата левая кнопка мыши.
#include "ParticleSystem.h"
#include <random>


std::random_device rd;
std::mt19937 gen(rd());


float randomFloat(float min, float max) {
    std::uniform_real_distribution<float> dist(min, max);
    return dist(gen);
}

int randomInt(int min, int max) {
    std::uniform_int_distribution<int> dist(min, max);
    return dist(gen);
}

int main() {
    
    sf::RenderWindow window(sf::VideoMode(1280, 720), "Particle System with Modules");

    ParticleSystem particles;

    sf::Clock clock;                   
    sf::Clock mousePressTimer;         

    bool isMousePressed = false;       
    sf::Vector2f emitterPosition;      

    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();

            
            if (event.type == sf::Event::MouseButtonPressed && event.mouseButton.button == sf::Mouse::Left) {
                isMousePressed = true;
                mousePressTimer.restart();
                emitterPosition = sf::Vector2f(sf::Mouse::getPosition(window));
            }

            if (event.type == sf::Event::MouseButtonReleased && event.mouseButton.button == sf::Mouse::Left) {
                isMousePressed = false;
            }
        }

        sf::Time elapsed = clock.restart();

        
        if (isMousePressed) {

            if (mousePressTimer.getElapsedTime().asMilliseconds() >= 1.0f) {
                mousePressTimer.restart(); 

                float angle = randomFloat(0.f, 360.f) * 3.14f / 180.f;
                float speed = randomFloat(50.f, 200.f);

                sf::Vector2f velocity(std::cos(angle) * speed, std::sin(angle) * speed);
                sf::Color color = sf::Color(randomInt(0, 255), randomInt(0, 255), randomInt(0, 255));

                particles.addParticle(emitterPosition, velocity, color);

            }
        }

        particles.update(elapsed, window);

        window.clear();
        window.draw(particles);
        window.display();
    }

    return 0;
}
Устанавливаем глобальные переменные для генерации случайных чисел.std::random_device rd;std::mt19937 gen(rd());Функция randomFloat возвращает случайное число с плавающей точкой в диапазоне от min до max.Функция randomInt возвращает целое случайное число в заданном диапазоне.sf::RenderWindow window(sf::VideoMode(1280, 720), "Particle System with Modules");Данный код создаёт графическое окно размером 1280 x 720 пикселей с заголовком «Particle System with Modules».Объекты и переменные:particles - экземпляр системы частиц, где хранятся и обновляются данные о частицах;clock - таймер для измерения времени между кадрами т.е. управление скоростью обновления;mousePressTimer - таймер для определения длительности удержания левой кнопки мыши;isMousePressed - флаг, указывающий, зажата ли левая кнопка мыши; emitterPosition - позиция эмиттера т.е. координаты точки появления частиц.Блок обработки событий:event - объект для обработки событий;if (event.type == sf::Event::Closed) window.close();Конструкция обработки события закрытия окна. Если пользователь нажал кнопку "Закрыть", окно закрывается.Блок обработки события - нажатие и удержание левой кнопки мыши.if (event.type == sf::Event::MouseButtonPressed && event.mouseButton.button == sf::Mouse::Left) {isMousePressed = true;mousePressTimer.restart();emitterPosition = sf::Vector2f(sf::Mouse::getPosition(window));}if (event.type == sf::Event::MouseButtonReleased && event.mouseButton.button == sf::Mouse::Left) {isMousePressed = false;}При нажатии кнопки мыши, устанавливается флаг isMousePressed в положение true. Сбрасывается таймер mousePressTimer т.е. запускается отсчёт времени. Записывается текущая позиция мыши в emitterPosition.При отпускании кнопки: флаг isMousePressed сбрасывается.Также не забываем создать глобальный цикл графического окна while (window.isOpen()) и цикл обработки событий while (window.pollEvent(event)).Блок обновление частиц:elapsed - время, прошедшее с последнего кадра, используется для обновления движения частиц.if (mousePressTimer.getElapsedTime().asMilliseconds() >= 1.0f)Если мышь зажата, каждую одну миллисекунду создаётся новая частица.float angle = randomFloat(0.f, 360.f) * 3.14f / 180.f;Вычисляется случайный угол и скорость частицы.float speed = randomFloat(50.f, 200.f);Вычисляется начальная скорость и цвет.Новая частица добавляется в систему через метод addParticle.Метод particlesupdate обновляет все частицы.Далее очищаем графическое окно window.clear(), отрисовываем частицы через метод draw системы частиц window.draw(particles).window.display()Отображаем новый кадр. Более подробную инструкцию вы можете получить, посмотрев видео «Простая система частиц SFML C++» Клонировать репозиторийТелеграмм канал "Программирование игр С++/С#"
****************************************

Дата вызова функции: 2025-01-14 22:31:17
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873566/',), {}
Возвращаемое значение функции: Недавно я познакомился с сервисом Strapi и почти сразу получил задачу "Настроить отправку файлов в S3 из Strapi". Это мой первый опыт в работе со Strapi, но не первое подключение к S3.В данной записи я хотел бы поделиться своим опытом и показать пару кастомных скриптов для работы с облачным хранилищу S3.Коротко о StrapiStrapi JS — это популярная открытая система управления контентом (CMS) на основе Node.js. Она предназначена для быстрого создания и управления бэкенд-серверами и API. Strapi обеспечивает гибкость в разработке благодаря своей модульной архитектуре и возможностям кастомизации.Чуть короче обо мнеЯ Backend разработчик, который до текущего момент работал в основном с PHP и в редких случаях с JS (в основном с вёрсткой). Есть опыт работы с различными API и немного понимаю в настройке серверов.Это я к тому, что я в данной записи постараюсь всё расписать со стороны дилетанта в области Node.js, поэтому прошу строго не судить!Начнём настройку подключения к S3Для начала нам конечно нужно получить доступы к облачному хранилищу S3, а именно:accessKeyId - это публичный ключ (аналог логина), предоставляемый провайдером облака. Он используется для идентификации пользователя или приложения, которое обращается к хранилищу.secretAccessKey - это приватный ключ (аналог пароля), который используется совместно с accessKeyId для аутентификации запросов. Его нельзя разглашать, так как он предоставляет полный доступ к ресурсам.region - определяет регион (географическое расположение) хранилища.endpoint - указывает URL для доступа к S3-совместимому хранилищу.bucket - Название S3-бакета, с которым вы работаете. Бакет — это контейнер для хранения объектов (файлов, данных).Все эти доступы вам должен предоставить ваш провайдер.Далее вам нужно установить npm модуль для работы с облачными хранилищами S3. Существует большое количество публичных модулей, я лично остановился на strapi/provider-upload-aws-s3.Для установки модуля, переходим в проект и запускаем команду в консоли.npm install @strapi/provider-upload-aws-s3Вторым этапом необходимо изменить конфигурацию Strapi и добавить в неё параметры подключения к облачному хранилищу. Для удобства, я рекомендую занести доступы в .env файл....
S3_ACCESS_KEY_ID="accessKeyId"
S3_SECRET_ACCESS_KEY="secretAccessKey"
S3_ENDPOINT_URL="endpoint"
S3_REGION='region'
S3_BUCKET_NAME='test_bucket'
...Теперь переходим в /config/plugins.js и прописываем в него следующий код.module.exports = ({ env }) => ({
  upload: {
    config: {
      provider: '@strapi/provider-upload-aws-s3',
      providerOptions: {
        credentials: {
          accessKeyId: env('S3_ACCESS_KEY_ID'),
          secretAccessKey: env('S3_SECRET_ACCESS_KEY'),
        },
        region: env('S3_REGION'),
        endpoint: env('S3_ENDPOINT_URL'),
        params: {
          Bucket: env('S3_BUCKET_NAME'),
        },
      },
    },
  }
});Теперь необходимо перезагрузить проект и проверить подключение через раздел "Медиа-библиотека", отправив пару файлов.Решения для типичных ошибокТуториал конечно простой, но для достижения цели мне пришлось изрядно покапаться и в процессе я написал несколько полезных скриптов, которые могут вам пригодиться.Не отображаются превью картинки в "Медиа-библиотеке"Если перейдя в "Медиа-библиотеку" изображения помечаются как "не найденные", а по факту файлы загрузились, то вам необходимо внести правки в config/middlewares.js для добавления источника.module.exports = ({ env }) => (
  [
    "strapi::logger",
    "strapi::errors",
    "strapi::cors",
    "strapi::poweredBy",
    "strapi::query",
    "strapi::body",
    "strapi::session",
    "strapi::favicon",
    "strapi::public",
    {
      name: 'strapi::security',
      config: {
        contentSecurityPolicy: {
          useDefaults: true,
          directives: {
            'connect-src': ["'self'", 'https:'],
            'img-src': [
              "'self'",
              'data:',
              'blob:',
              'market-assets.strapi.io',
              'https://'+env('S3_BUCKET_NAME')+'.obs.'+env('S3_REGION')+'.hc.sbercloud.ru',
            ],
            'media-src': [
              "'self'",
              'data:',
              'blob:',
              'market-assets.strapi.io',
              'https://'+env('S3_BUCKET_NAME')+'.obs.'+env('S3_REGION')+'.hc.sbercloud.ru',
            ],
            upgradeInsecureRequests: null,
          },
        },
      },
    }
  ]
);
Формирование домена в вашем случае может отличаться от моего. Данную информацию вы можете посмотреть получив полный путь к любому файлу, добавленному в ваше облачное хранилище.Тестирования соединения с S3К сожалению, модуль strapi/provider-upload-aws-s3 поддерживает подключение к S3, только из системы Strapi и не позволяет писать кастомные скрипты.Но часто бывает такое, когда нужно проверить работу подключения к S3, установить соединение или отправить файл.Для тестирования работы подключения к S3 можно использовать дополнительный модуль aws-sdk. С помощью данного модуля вы можете проверить подключение и корректность отправки файлов.Для установки пропишите команду:npm install aws-sdkПроверка подключения к S3Немного кастыльный метод, но к счастью рабочий - проверка подключения через кастомный скрипт.Для этого, в корне проекта создайте файл test-s3-connection.js и занесите в него следующий код:// Подключение переменных окружения из .env
require('dotenv').config();

const AWS = require('aws-sdk');

// Настройка клиента S3
const s3 = new AWS.S3({
  accessKeyId: process.env.S3_ACCESS_KEY_ID,
  secretAccessKey: process.env.S3_SECRET_ACCESS_KEY,
  endpoint: process.env.S3_ENDPOINT_URL,
  s3ForcePathStyle: true, // Использовать путь стиля для S3-совместимых хранилищ
  signatureVersion: 'v4',
});

// Функция для проверки подключения
s3.listBuckets((err, data) => {
  if (err) {
    console.error('Ошибка подключения к S3:', err.message);
    console.error('Подробности:', err);
  } else {
    console.log('Подключение к S3 успешно.');
    console.log('Список bucket-ов:', data.Buckets);
  }
});Для запуска скрипта, пропишите следующий код в консоли:node test-s3-connection.jsЕсли подключение будет успешным, то вы увидите список bucket-ов.Проверка загрузки файловДля проверки загрузки файлов можно использовать кастомный скрипт, который я назвал test-s3-upload.js:// Подключение переменных окружения из .env
require('dotenv').config();

const AWS = require('aws-sdk');
const fs = require('fs');

// Настройки S3
const s3 = new AWS.S3({
  accessKeyId: process.env.S3_ACCESS_KEY_ID,
  secretAccessKey: process.env.S3_SECRET_ACCESS_KEY,
  endpoint: process.env.S3_ENDPOINT_URL,
  s3ForcePathStyle: true, // Использовать путь стиля для S3-совместимых хранилищ
  signatureVersion: 'v4',
});

// Имя bucket
const bucketName = 'bucket-name'; // Замените на имя вашего bucket

// Тестовый файл для загрузки
const fileName = 'test-file.txt';

// Создание тестового файла
fs.writeFileSync(fileName, 'Hello, S3! This is a test file.');

// Параметры загрузки
const uploadParams = {
  Bucket: bucketName,
  Key: fileName,
  Body: fs.createReadStream(fileName),
  ContentType: 'text/plain',
};

// Загрузка файла
s3.upload(uploadParams, (err, data) => {
  if (err) {
    console.error('Ошибка загрузки:', err);
  } else {
    console.log('Файл успешно загружен:', data.Location);
  }

  // Удаление локального тестового файла
  fs.unlinkSync(fileName);
});Для запуска скрипта, пропишите следующий код в консоли:node test-s3-upload.jsТаким образом вы можете отследить ошибки, если такие имеются, а также можете использовать данные скрипты для автоматического тестирования.Вот так я настраивал подключение к S3 в Strapi!Спасибо за внимание!
****************************************

Дата вызова функции: 2025-01-14 22:31:18
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873618/',), {}
Возвращаемое значение функции: Всем привет! Думаю, все уже знают, что в телеге уже год как бум мини-аппов, все тапали хомяка. Подавляющее большинство из них связаны с криптой. Многие хотят внутри приложения давать своим пользователям кошелёк (EVM, TON или Solana, etc.), как некий виртуальный счёт, который можно пополнить, выводить средства, и, самое главное, дергать смарт-контракты.Простое и небезопасное решение - хранить все ключи на серваке, выполнять транзакции от имени юзера. Взлом вашего сервера = потеря всех клиентских средств, добиться доверия в этом случае очень сложно.Сложное и неудобное решение - кошелёк, который юзер должен записать на бумажке и следить за его безопасностью сам. В этом случае, вам лучше вообще использовать WalletConnect или не делать миниапп вообще. Правда, в этом случае UI миниаппа превращается в ад, где юзер должен подтверждать каждое действие во внешнем приложении.Мы искали для нашего миниаппа вариант, который бы давал безопасность некастодиального кошелька, но с максимально гладким UX/UI. И нашли.В этой статье я хочу сделать обзор TMA Wallet (npm-пакет, сайт, github) - opensource некастодиального multi-party кошелька, подходящего для любых чейнов, работающего на базе недавно появившееся API Telegram Cloud Storage.Поехали!Очень краткое объяснение терминовКошелёк = приватный ключ. Этот приватный ключ используется для подписи транзакций и даёт тому, кто им владеет, право распоряжаться средствами на конкретном блокчейн-адресе.Кастодиальный кошелёк = вашим приватным ключом владеет другая организация и выполняет действия от вашего имени. Классический пример - криптобиржи, аля Binance. Это удобно, но требует большого доверия к организации.Некастодиальный кошелёк = ваш приватный ключ только у вас. Он хранится на вашем устройстве, и все действия со средствами выполняются либо напрямую вами, либо с вашего подтверждения. Главная проблема некастодиальных кошельков - их легко потерять. Утратил доступ к приватному ключу - прощайте, средства.MPC (multi-party-computation) - попытка решить проблему утери кошелька: разбить ключ на несколько частей, каждая из которых хранится у разных контрагентов, и они все требуются для формирования подписи транзакции. В этом сценарии взлом одного из контрагентов не даёт доступа к средствам клиента. При этом клиенту не надо переживать за хранение ключа самостоятельно.Поэтому, некастодиальный MPC-кошелёк - это как раз кошелёк, части приватного ключа которого хранятся в разных местах, и никогда не собираются вместе у какого-либо из контрагентов.Что вообще такое TMA Wallet?TMA Wallet - это некастодиальный multi-party (MPC) кошелёк, который использует новые возможности Telegram Cloud Storage для безопасного хранения ключей. Всё это завязано на Telegram-аккаунт пользователя и не требует от человека запоминать какие-то seed-фразы или заводить внешние кошельки. Флоу настолько плавный, что ваш пользователь может даже не знать, что под капотом используется крипто-кошелёк - можно сделать совершенно человеческий UI, изолировав от пользователя блокчейн-магию.Какие конкретные плюсы я бы выделил:Лёгкая интеграция: просто ставишь npm-пакет, прицепляешь его к своему коду - и всё, у каждого юзера вашего мини-аппа теперь есть кошелёк.Никаких костылей с TON Connect, WalletConnect: пользователь остаётся целиком в Telegram, и все транзакции подписываются "под капотом".MPC-технология: приватный ключ не доступен никому — ни Telegram, ни вашему серверу, ни серверам TMA Wallet. Он воссоздаётся на устройстве пользователя, держится в памяти считаные наносекунды (на время транзакции) и исчезает.Удобное восстановление: потерял телефон - без проблем, бери новый, заходи в Telegram, и кошелёк восстановится автоматически.Доступ с разных устройств: если юзер зашёл в миниапп с десктопа с тем же аккаунтом - он получит доступ к тому же воллету, что и на телефоне.Открытый исходный код: всё лежит на GitHub, можно проверить и убедиться в безопасности, либо самостоятельно провести аудит.Поддержка Viem/Wagmi/Ethers.js: если вы пишете под любой EVM-совместимый блокчейн (Ethereum, BSC, Polygon и т.д.), то сможете использовать стандартные либы.Поддержа любых чейнов: из коробки поддерживаются EVM-чейны, но сама суть TMA Wallet - это просто раздельное хранение некоего секрета, так что в качестве секрета может выступать приватник от любого чейна (TON/Solana/etc).Как это устроено «под капотом»?Как я уже раза три написал - TMA Wallet основан на принципах Multi-Party Computation (MPC), где приватник, по сути, распределён между несколькими сторонами и собирается только на клиенте, на мгновение при транзакции. Вот краткая схема:При первом запуске мини-аппа у пользователя на устройстве генерируются ClientPublicKey и ClientSecretKey. ClientSecretKey сохраняется в Telegram Cloud Storage.ClientPublicKey и WebApp.initData (подписанная Telegram'ом авторизационная строка) летят на сервер.Сервер проверяет валидность подписи от Telegram и (при желании) запрашивает у пользователя дополнительный фактор аутентификации (2FA). Можно и без него, как у нас.Сервер генерирует так называемый IntermediaryKey, подписав (ClientPublicKey + telegramUserId)  своим ServerSecretKey. Этот IntermediaryKey шифруется перед отправкой на клиент.IntermediaryKey возвращается обратно на клиент и расшифровывается там.На финальном шаге IntermediaryKey подписывается ClientSecretKey и превращается в WalletPrivateKey (собственно, приватный ключ от воллета).Этот ключ используется для подписи транзакции, при этом нигде не сохраняется, для каждого нового действия вся цепочка выше (кроме 1 пункта) повторяется.В итоге мы имеем приложение, которое (по UX) выглядит идеально: логин бесшовный благодаря авто-авторизации в миниаппах, а транзакции бесшовные, потому что используется собственный in-app кошелёк.Как добавить в свой миниапп?Установите SDK в проект:npm install --save @tmawallet/sdkДобавьте в код инициализацию ключа:import { TMAWalletClient } from '@tmawallet/sdk';
import { ethers } from 'ethers';

// не забудьте зарегаться на dash.tmawallet.com
const myApiKey = '1234567812345678'; // API-ключ из dash.tmawallet.com
const client = new TMAWalletClient(myApiKey);

// Авторизуем пользователя и создаём/загружаем для него кошелёк
await client.authenticate();

console.log('Your wallet address: ', client.walletAddress);Пример, как сделать транзакцию (в данном случае через Ethers.js):// Используем TMA Wallet как "signer" для ethers
const provider = new ethers.JsonRpcProvider();
const signer = client.getEthersSigner(provider);

const tx = await signer.sendTransaction({
  to: '0x...',
  value: ethers.parseEther('1.0'),
});
console.log('Transaction hash:', tx.hash);Вуаля.FAQПеревёл вопросы (с легкой редактурой), ответы на которые TMA Wallet написали в своем README:Это точно безопасно?Да, и это принципиально: благодаря MPC-протоколу ни серверы TMA Wallet, ни Telegram, ни вы не имеете полного доступа к приватному ключу. Только юзер.Мне надо давать вам доступ к токену моего бота?Нет, мы одни из первых кто поддерживает новую асимметричную схему подписи Telegram. Нам нужен только ID вашего бота, он итак является публичным.Какой блокчейн можно поддерживать?Любой. Из коробки - всё, что работает с ethers.js (то есть EVM). Если у вас что-то кастомное, можно использовать метод accessPrivateKey.А если пользователь потерял устройство?Пока у него есть доступ к его Telegram-аккаунту, он просто залогинится на новом девайсе и кошелёк сам восстановится. Сид-фразу искать не придётся.Можно ли сделать бэкап ключа?Технически да, но не нужно. Кошелёк и так восстанавливается через Telegram. Если хотите, можете дать пользователю возможность забекапить ключ - но это уже на ваш страх и риск.ЗаключениеМы использовали TMA Wallet в двух собственных приложениях, одно из которых уже в проде (постеснялся выкладывать ссылку в начале статьи, чтобы не выглядело как реклама, но в футере ящитаю уже можно, Only100x)Это отличный выбор для тех, кто разрабатывает мини-аппы в Telegram и хочет давать своим юзерам секьюрный воллет, не уродуя при этом UX всякими коннекторами. Пробуйте, изучайте, если есть вопросы - вся документация и исходники проекта доступны на GitHub. Удачи!P.S. 2025 год на дворе, как же без рекламы канала? собсна, я тоже сделал тг-канал. там я отвратительно себя веду, много матерюсь, но часто пишу всякое полезное про техно-фаундерство, AI, и прочее: как про мои/чужие opensource-либы, так и про то, как я укус за укусом прогрызаю свой путь в этом вашем медиа-пространстве. Подписывайтесь!
****************************************

Дата вызова функции: 2025-01-14 22:31:18
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873374/',), {}
Возвращаемое значение функции: Рассмотрен способ приведения судоку: неправильного (со множеством решений) к правильному, то есть к судоку с единственным решением − . (9х9)-матрицей цифр, назначенной для неправильного судоку в качестве «Ответов на судоку». «Правка» неправильного судоку состоит в назначении для него минимального количества дополнительных цифр-подсказок, что не нарушает классической структуры судоку.Предыстория и казус газетных судокуКак и прежде, ближе к Новому году в почтовых ящиках жителей нашего городского округа чаще стали появляется номера газеты «Восточный округ»  (ВО). И традиционно в конце каждого номера приводится головоломка судоку. И наверное, тоже уже традиционно, эти судоку  ̶  неправильные, то есть имеют много решений (ответов), и только одно из них назначено в виде заполненной цифрами таблицы как «Ответы на судоку». На этот раз судоку, попавшееся на глаза (в номере ВО №40 (563)), побило все прежние рекорды по числу решений (их оказалось 83 132), из которых уважаемому читателю предложено как-то угадать единственное, приведённое в газете как «Ответы на судоку». На такой казус газетных судоку я прежде обращал внимание редакции газеты ВО. И на этот раз я не удержался, и  не внял просьбе близких: «перестать заниматься ерундой» не тратить время на публикацию в сети. Год назад, анализируя последние номера газеты ВО 2023 года, я предлагал (см. habr.com/ru/articles/787496) «подправлять» подобные неправильные судоку так, чтобы они имели единственное решение. Но предлагаемая тогда «правка» налагала на судоку дополнительные ограничения, меняя их классическую структуру. Например, для судоку №149 из sudoku.bestcrosswords.ru/generator, имеющего 26 918 отличных друг от друга решений, предлагалось дополнительно потребовать, чтобы на побочной диагонали матрицы располагался полный набор цифр от 1 до 9. Это дополнительное требование меняло классическую структуру судоку и усложняло восприятие привычной головоломки. А как дополнить исходную таблицу судоку минимальным числом новых  цифр-подсказок, чтобы получилось судоку с классической структурой и единственным решением, например, с тем, что приведено в газете как  «Ответы на судоку»? В этом и состоит задача, решение которой позволит преодолеть казус газетных судоку. Способ преодоление казуса или как «править» неправильные  классические судоку Для «правки» возьмём судоку из семи последних номеров газеты ВО за 2024 год (см. архив газет на newsvostok.ru/archive) и упомянутый выше судоку №149.Вряд ли «подправленные» судоку будут отличаться особым изяществом, но они дадут единственный честный «Ответ на судоку», напечатанный в упомянутой газете или выданный упомянутым генератором судоку.Рассмотрим этапы предлагаемой «правки».После получения множества всех решений неправильного судоку (например, по алгоритму, рассмотренному в habr.com/ru/articles/787496) произведём их анализ. Определим частоту появления каждой цифры из «Ответа на судоку» в полученных решениях. В сформированной при этом таблице частот находим клетку с минимальным значением (количеством повторений). А в ячейке, соответствующей этой клетке, в матрице с «Ответами на судоку» выбираем цифру, которую назначаем как новую дополнительную цифру-подсказку для корректируемого судоку. Затем снова получаем решения (или они выбираются из ранее найденных) для судоку с новой, дополнительно принятой цифрой-подсказкой. Число таких решений сокращается. Далее снова выполняем процедуры вычисления таблицы частот повторений, выбора минимального их числа и назначения новой цифры-подсказки для коррекции неправильного судока до получения единственного решения. Отметим, что если в таблице частот окажется несколько одинаковых значений с минимальным числом повторений, то выбираем любой вариант или просто берём вариант с первой клеткой, встречаемой, например, при обходе этой таблицы по строкам .Представленный способ позволит назначить дополнительные цифры-подсказки к матрицам, которые изначально задают неправильные судоку. Алгоритм представленного способа несложно реализовать программно.Пример для иллюстрацииПоясним  рассмотренный способ на примере судоку №46(569) в последнем номере газеты ВО за 2024 год. На рисунке 1 представлены исходная матрица этого судоку и единственная матрица «Ответы на судоку», хотя это судоку имеет 27 отличающихся друг от друга решений (27 матриц с цифрами).Рисунок 1. Матрица исходного судоку (слева) и «Ответы на судоку» (справа).Цифры из матрицы «Ответы на судоку» сравнивалась с цифрами из этих 27 решений и определялось количество повторений цифр из «Ответы на судоку»  в одинаково расположенных ячейках матриц решений. Получена следующая таблица числа повторений, показанная слева на рисунке 2.Рисунок 2. Таблицы частот повторений для решений: 27 (слева) и 3 (справа).Выбор из таблицы частот (слева) клетки 3B с минимальным числом 3 повторений и цифры 9 из ячейки 3B матрицы «Ответы на судоку» как дополнительной цифры-подсказки даст 3 решения дополненного судоку. А для этих 3 решений выбор из таблицы частот (справа) клетки 5B и цифры 4 из ячейки 5B матрицы «Ответы на судоку» в качестве следующей дополнительной цифры-подсказки приведёт к единственному решению, совпадающему с «Ответами на судоку».Отметим, что для 27 решений альтернативный выбор из таблицы частот (слева)  клетки 8D с таким же минимальным числом 3 повторений и цифры 8 из ячейки 8D матрицы «Ответы на судоку» приведёт к такой же таблице частот (справа) и затем к единственному решению, совпадающему с «Ответами на судоку». То есть дополненные матрицы судоку будут отличаться на одну ячейку, но количество 2 дополнительных цифр-подсказок (к исходному неправильному судоку) не изменится. Рассмотренное из газеты ВО судоку №46(569) с 27 решениями и с 2-мя альтернативами выбора первой дополнительной цифры-подсказки, каждая из которых ведёт к безальтернативному (то есть альтернатива равна 1) выбору из 3-х решений второй цифры-подсказки, схематически можно записать как        ВО №46(569) 27(2), 3(1), 1.   Здесь число дополнительных цифр-подсказок равно двум и равно количеству стадий понижения чисел рассматриваемых решений без последней единицы. Опираясь на такую схему записи представим «правку» всех рассмотренных судоку.Схемы «правки» и результаты «правки»  Рассмотренные судоку:Источник_судоку  Число_решений(вариантов_выбора_доп._цифры), ... , 1ВО №46(569) 27(2), 3(1), 1 ВО №45(568) 584(2), 32(4|3), 2(10), 1 *ВО №44(567) 92(1), 7(1), 1ВО №43(566) 179(1), 6(1), 1ВО №42(565) 1316(1), 51(15), 1ВО №41(564) 17709(1), 1132(1), 128(1), 21(1), 4(1), 1ВО №40(564) 83132(1), 7097(1), 438(1), 21(1), 4(8), 2(8|4|2), 1sudoku.bestcrosswords.ru/generator №149, 26819(1), 851(1), 62(1), 12(1), 4(1), 2(10), 1* Запись (4|3) означает, что одному из 2-ух вариантов назначения предыдущей цифры-подсказки соответствует 4 или 3 варианта назначения следующей цифры-подсказки.Приведём далее (на рисунках слева) исходные неправильные судоку с решениями, максимально отличающимися от «Ответов на судоку». Ячейки с отличающимися цифрами закрашены оранжевым цветом. На рисунках справа показаны полученные правильные судоку с добавленными цифрами-подсказками, а в ячейках каждого из этих судоку указано единственное решение, которое и есть «Ответы на судоку». Добавленные цифры-подсказки указаны в раскрашенных в цвета спектра ячейках − красный, оранжевый, жёлтый, светло-зелёный, зелёный, голубой − в порядке их назначения и следования стадий понижения числа рассматриваемых решений.Рисунок 3. Исходный судоку №46(569) с решением №22 из 27 (слева)  и исправленный судоку с единственным «Ответом на судоку» (справа).Рисунок 4. Исходный судоку №45(568) с решением №120 из 584 (слева) и исправленный судоку с единственным «Ответом на судоку» (справа).Рисунок 5. Исходный судоку №44(567) с решением №62 из 92 (слева)  и исправленный судоку с единственным «Ответом на судоку» (справа).Рисунок 6. Исходный судоку №43(566) с решением №63 из 179 (слева)  и исправленный судоку с единственным «Ответом на судоку» (справа)./Рисунок 7. Исходный судоку №42(565) с решением №517 из 1316 (слева)  и исправленный судоку с единственным «Ответом на судоку» (справа).Рисунок 8. Исходный судоку №41(564) с решением №13945 из 17709 (слева)     и исправленный судоку с единственным «Ответом на судоку» (справа).Рисунок 9. Исходный судоку №40(563) с решением №15000 из 83132 (слева)   и исправленный судоку с единственным «Ответом на судоку» (справа).Рисунок 10. Исходный судоку №149 с решением №20098 из 26918 (слева)  и исправленный судоку с единственным «Ответом на судоку» (справа).Анализ полученных правильных судоку     Рассмотрение для судоку №43(566), №45(568), №41(564) альтернативных назначений клеток таблиц частот и путей следования по ним показало, что общее число дополнительных цифр-подсказок при этом для судоку не изменялось. Отметим, что сложность получившихся правильных судоку невелика.  Все они, кроме судоку №43(566), решаются с помощью простейшего анализа. Опишем проверки, используемые в таком анализе. Поскольку при анализе применялись функции работы с битами, используем обозначение zk=2k-1 – двоичный код цифры k, и обозначим как Hi,j, Vi,j, Si,j  логическую сумму двоичных кодов цифр членов группы (соответственно строки, столбца и 3х3-сектора) с исключённой из неё ячейкой (i,j) − её код можно задать значением  zk=[2k-1]=[20-1]=0. Простейший  анализ включает следующие две проверки (1) и (2):1. Если для пустой ячейки (i,j) (ячейки с нулём) отрицание логической суммы двоичных кодов цифр-подсказок для группы (строки Hi,j, столбца Vi,j , сектора Si,j) , содержащей эту ячейку, даёт только один бит zk (см. формулу (1)) для одной цифры, то цифра k назначается как цифра-подсказка.2. Если для пустой ячейки логическая сумма двоичных кодов всех цифр-кандидатов членов её группы не содержит единственный бит zk, который присутствует среди двоичных кодов цифр-кандидатов данной ячейки, то этот код zk цифры (см. формулу (2)) принимается как код цифры-подсказки (и цифра k назначается как цифра-подсказка). Другими словами: если для пустой ячейки нет повторений допустимой цифры z среди допустимых цифр в строке, столбце или секции для других ячеек, то эту цифру z следует оформить как новую цифру-подсказку.Правильное судоку, полученное на основе судоку ВО №43(566), оказалось более сложным. В нём при решении кроме упомянутого выше анализа надо задействовать исключение из списков цифр-кандидатов, а также назначение наугад из цифр-кандидатов с дальнейшим следованием или до обнаружения противоречия, или до получения правильного набора цифр.ЗаключениеПредставленный  способ, позволяющий переводить неправильное судоку с выбранным одним из множества решений в правильное судоку с этим единственным решением «Ответом на судоку», можно использовать не только для устранения казусов газетных судоку, но и вообще для получения иных правильных судоку по первоначально заданной системе цифр-подсказок.  При программной реализации алгоритма представленного способа назначение  дополнительных цифр-подсказок на основе выбора из частотных таблиц альтернативных клеток с минимальным значением может выполняться как в интерактивном режиме, так и в автоматическом: при конкретном задании пути просмотра частотных таблиц. Рассмотренные примеры показали, что количество необходимых дополнительных ячеек не меняется − не зависит от выбора пути просмотра. Хотя случай судоку ВО №43(566) даёт пример получения относительно сложной головоломки, но сложность остальных правильных судоку, полученных в результате «правки», невысока. Впрочем, она соответствует уровню кроссвордов и головоломок, публикуемых вместе с этими судоку. Во всяком случае эти «подправленные» головоломки лучше тех неправильных судоку, для которых невозможно с помощью нормальной логики определить, какое из множества решений было опубликовано как «Ответы на судоку».
****************************************

Дата вызова функции: 2025-01-14 22:31:18
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873610/',), {}
Возвращаемое значение функции: Беспилотные автомобили и гуманоидные роботы, способные ходить, разговаривать и работать бок о бок с людьми, — это лишь два примера того, как искусственный интеллект может изменить мир в ближайшем будущем.Однако для того, чтобы эти физические ИИ-инструменты и приложения могли работать безопасно и эффективно, им необходимо научиться понимать окружающий мир.Дисклеймер: это вольный перевод колонки издания Forbes, которую написал Бернард Марр. Перевод подготовила редакция «Технократии». Чтобы не пропустить анонс новых материалов подпишитесь на «Голос Технократии» — мы регулярно рассказываем о новостях про AI, LLM и RAG, а также делимся полезными мастридами и актуальными событиями.Обсудить пилот или задать вопрос об LLM можно здесь.На выставке Consumer Electronics Show в Лас-Вегасе в этом году NVIDIA анонсировала запуск своей платформы Cosmos, предназначенной для ускорения разработки физических ИИ-систем.Cosmos, названная «моментом ChatGPT для робототехники», способна генерировать огромные объемы синтетических данных. Эти данные, несмотря на то что они искусственно созданы, достаточно близки к реальному миру, чтобы роботы, автомобили с автопилотом и другие физические ИИ-алгоритмы могли на них обучаться.Тем не менее, некоторые считают, что никакое количество синтетических данных не сможет полностью смоделировать все реальные ситуации, к которым машины должны быть готовы. Поэтому, например, Tesla уже много лет собирает данные с реальных условий с помощью своих автомобилей, оснащенных сенсорами. Генеральный директор компании Илон Маск написал в Twitter: «Два источника данных имеют бесконечный масштаб: синтетические данные, у которых есть проблема «а правда ли это?» и реальное видео, которой этой проблемы не имеет».Аргумент заключается в том, что синтетические данные лишены хаотичной непредсказуемости и сложности реального мира, а это критически важно для создания комплексных и безопасных ИИ-систем. Давайте рассмотрим это более подробно.Синтетические данные vs реальные данныеВ системах автономного вождения визуальные данные (изображения) используются для обучения алгоритмов, которые определяют, как автомобили будут реагировать на различные условия и ситуации на дороге. Эти данные могут быть получены с помощью камер, установленных на автомобилях (реальные данные). Также они могут быть сгенерированы ИИ-алгоритмами в соответствии с правилами, изученными на основе реальных данных (синтетические данные).У каждого из этих методов есть свои плюсы и минусы.Синтетические данные зачастую можно собрать гораздо быстрее и дешевле, чем реальные. Для этого не нужно выходить на улицу и собирать данные вручную — их просто генерируют машины.Это также может иметь преимущества с точки зрения безопасности. Тестирование беспилотных автомобилей на дорогах, например, всегда сопряжено с определенным риском, который можно полностью устранить, если поездки просто симулировать.Ситуации, окружение и многие другие переменные можно также настроить, вместо того чтобы ждать, когда появятся идеальные условия для сбора данных в реальном мире. Например, исследователи могут смоделировать редкие погодные явления, протестировать автономные автомобили в опасных сценариях или смоделировать сложные производственные дефекты без реальных рисков или задержек.Кроме того, создание синтетических данных может снизить или полностью исключить вопросы, связанные с конфиденциальностью и защитой данных, которые могут возникнуть при сборе реальных данных. Так, например, нет риска того, что конфиденциальные персональные данные могут быть случайно сохранены или скомпрометированы.Это может произойти при сборе реальных данных. Например, номера автомобилей, зафиксированные камерами автономных автомобилей, могут быть связаны с их владельцем и использованы для идентификации и отслеживания.Реальные данные, с другой стороны, как указывает Маск, имеют неоспоримое преимущество в своей аутентичности. Хаотичное и непредсказуемое поведение людей, которое сложно сгенерировать искусственно, скорее всего, будет учтено в реальных данных.Регулирование также может стать проблемой. Законы в области ИИ развиваются быстро, и вполне возможно, что регуляторы в какой-то момент потребуют, чтобы определённые модели или приложения обучались на реальных данных, или даже в некоторых юрисдикциях, по соображениям безопасности.Взвешивание вариантовНа самом деле как реальные, так и синтетические данные, вероятно, окажутся крайне важными для обучения следующего поколения физических ИИ-автомобилей и роботов.Каждый из методов имеет свои уникальные преимущества и вызовы, и наиболее успешным, вероятно, будет гибридный подход.Задача состоит в том, чтобы определить, какой тип данных наиболее подходящий для конкретных случаев использования. Например, синтетические данные могут быть более полезны для задач или приложений, связанных с обработкой чувствительной информации или работой в опасных условиях.С другой стороны, реальные данные могут быть предпочтительны для учёта динамичного человеческого поведения или для ситуаций, где возможны неожиданные хаотичные события.Это означает, что ИИ-проекты, которые выберут сбалансированный подход, возглавляемый специалистами, понимающими, как синтетическая и реальная информация могут дополнять друг друга, а не конкурировать, с большей вероятностью создадут реальную бизнес-ценность.
****************************************

Дата вызова функции: 2025-01-14 22:31:18
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873594/',), {}
Возвращаемое значение функции: Геймификация в Volkswagen ID.4Всё время, что я вожу авто, я замечаю, насколько UX в медиасистемах отстаёт от того, что я вижу на своих iPhone и MacBook. При этом машина — куда более премиальный «девайс», над которым работает не меньше классных инженеров и дизайнеров, чем над смартфонами и операционками для лэптопов. Что же не так? Давайте разберемся.До и после iPhoneСистема COMAND в Mercedes-Benz W220До того, как Apple ввела в массы сенсорные экраны, работа дизайнеров интерфейсов в автоиндустрии была достаточно простой — у большинства машин даже не было экранов или они были маленькими, чтобы показывать только частоту радио, название песни или навигатор, но такое было только в люксовых машинах. Кроме того, даже если у авто и был экран, то он не был сенсорным. Всё управление отдавали на откуп кнопкам, тумблерам и другим физическим источникам ввода. В целом оно и логично — тогда не было привычки к сенсорным экранам, да ещё это и безопаснее, потому что водителю не надо отвлекаться от дороги.Зачатки сенсорного мультимедиа были в основном в премиальных машинах. Например, у Lexus была система Enform, и в некоторых моделях она шла вместе с сенсорным дисплеем. С помощью него можно было включить навигатор или управлять климатом, в целом ничего необычного. BMW 320i Touring, которая вышла за год до iPhoneС появлением iPhone всё изменилось. Сенсорные экраны стали проникать буквально везде, и концерны не могли стоять в стороне. Правда, мало у кого из автопроизводителей был такой же штат дизайнеров как у Apple и доступ к таким же сенсорным экранам как у iPhone. В итоге все начали вводить сенсорные интерфейсы, но мало кто был к этому готов.Илон Маск, который смог, но сделал ещё хужеВнутри Tesla Model S, которая вышла в 2013 годуВ начале 10-х, когда мир окончательно перешёл на сенсорные смартфоны и заразился планшетами, Илон Маск пришёл и показал «как надо». У его Tesla Model S вообще не было физических кнопок для управления мультимедиа и климатом — только огромный планшет, у которого тогда был отличный интерфейс.Конечно же, тогда это было настоящей революцией. В отличие от других авто Tesla была настоящим гаджетом. У неё был отзывчивый сенсорный экран с мультимедийными функциями, картами и тонкими настройками.Правда, не все владельцы Tesla рассказывают, что для открытия бардачка нужно сделать несколько нажатий в меню этой системы. Да, то, что даже на самых дешёвых машинах делается движением одной руки, занимает относительно много времени на «авто будущего». И так во многом.Несмотря на то, что Tesla замотивировала всех вкладываться в UX, из-за неё многие концерны растащили и более глупые идеи.Что сейчас и что будет дальше?Интерфейс медиасистемы 2024 Mercedes-Benz CLAiPhone и Tesla, которые перевернули вверх дном индустрию интерфейсов в авто, из гаджетов будущего превратились в рядовые вещи. Этим уже никого не удивишь. Смогли ли догнать их другие автопроизводители? Вопрос сложный.Например, Mercedes решил остаться в 2013. Несмотря на цены, интерфейсы их авто до сих пор выглядят как Android образца нулевых. Объёмные иконки с не самым логичным дизайном. При этом они придерживаются физических кнопок для управления климатом и другими часто используемыми функциями, так что хотя бы так. Салон Hyundai Elantra 2024Hyundai какое-то время экспериментировал с сенсорными кнопками, но в итоге решил сделать упор на физических кнопках. Причина простая — фокус-группы показали, что сенсор раздражает людей и даже заставляет их «заводиться». Похожая ситуация наблюдается и в премиальном секторе. Например, Porsche не делают огромные экраны, а ставят старые добрые кнопки. Многие производители поддерживают тренд на возвращение к физическим кнопкам, и правильно делают. Европейское агентство, которое присуждает рейтинг безопасности автомобилям, скоро начнёт требовать наличие физических кнопок на приборной панели для присуждения 5 из 5 звёзд. Это правило вступит в силу в январе 2026 года. NCAP хочет побороть проблему с чрезмерным использованием сенсорных панелей для управления основными моментами в автомобиле.Салон Rivian R3 Помимо отрицания современного дизайна и отказа от кнопок есть ещё и третий путь — купить тех, кто смог стать как Tesla. Речь идёт о Volkswagen, которая вложит $5,7 млрд в Rivian. Видимо, немцы совсем отчаялись сделать свои авто по-настоящему «умными», поэтому решили привлечь специалистов, у которых вышло это.Совместное предприятие Volkswagen и Rivian будет работать над платформой электромобилей и софтом для бортовых компьютеров. Ещё одна цель — аккумуляторы следующего поколения.Инженеры обеих компаний уже какое-то время тесно работают вместе. Они уже показывали закрытому кругу журналистов машину Volkswagen на софте Rivian. Правда, мы увидим плоды их совместной работы не раньше 2027 года. Мультимедиа внутри салона Li Auto L9Есть и совсем отдельный мир — китайцы. Они сильно вдохновились Tesla и решили выкрутить эту философию на максимум. Чем больше разных функций, тем лучше. Там давно относятся к машинам не как к средству передвижения, а как к девайсам. Такая ситуация, конечно, в основном в премиальных авто. Например, в бюджетных авто у Chery, Geely и BAIC вполне традиционные салоны. Иногда даже физические кнопки попадаются и никаких встроенных YouTube.Что мы имеем в итоге?Внутри Tesla CybercabПока автоконцерны со всего мира двигаются в разные стороны, Tesla готовится к следующему шагу — в целом убрать руль. Так компания видит своё фирменное такси, где всё будет работать с помощью автопилота. В целом Cybercab пока что выглядит сомнительно, потому что там ещё всего два сиденья вместо четырёх в нормальном такси, но не об этом.Кажется, что кроме китайцев и американских стартапов, никто не будет пытаться угнаться за Tesla в этом плане, потому что для многих водителей физические кнопки и не самое большое количество функций важнее, чем красивый интерфейс, возможность спеть в караоке и магазин приложений.Да, к этому все, так или иначе, стремятся, но этот набор скорее фишки для самых жирных комплектаций, чем стандарт для индустрии. И многих пассажиров это устраивает.Более того, как я говорил выше, скоро в ЕС нельзя будет получить высшую оценку безопасности без наличия физических кнопок. Маск, скорее всего, будет критиковать такой подход, но остальные концерны точно прислушаются. Так вот, отвечая на вопрос из заголовка, iPhone, а следом и Tesla заставили всех поверить, что машина должна быть гаджетом с большим сенсорным экраном и магазином приложений. Это привело к попытке повторить сделать что-то подобное практически от каждого концерна, но оказалось, что всё это обман.Но пока все это переваривали, интерфейсы в авто не стали сильно лучше. Одни производители застряли в эре до iPhone, другие до сих пор пытаются сделать интерфейс более мобильным, а у третьих — что-то осталось в мире до iPhone, а что-то в попытках его повторить.Если понравился этот обзор, то можете подписаться на мой телеграм канал Что вы мне рекламируете? Там я доступно пишу про диджитал, маркетинг и технологии. Например про то, как стартапы пришли к онлайн-похоронам, почему Spotify выиграл Apple на старте Apple Music и когда OpenAI релизнет свою рекламу внутри ChatGPT
****************************************

Дата вызова функции: 2025-01-14 22:31:18
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/companies/modusbi/articles/873586/',), {}
Возвращаемое значение функции: За последний год платформа Modus BI сильно изменилась - мы выпустили целых девять обновлений. 2024 год подошёл к концу, и мы решили собрать в одной статье основные “фишки”, которые мы добавили в течение года в Modus BI и Modus ETL, и показать, как продукт менялся, какие функции и возможности появлялись, и как они могут помочь компаниям улучшить свою работу.Визуальные компонентыЗа прошедший год мы поработали над удобством создания отчётов и внешним видом визуализаций: разработали одну визуализацию с нуля и снабдили новым функционалом более пяти стандартных визуализаций:Добавили новую визуализацию Tree Map (Дерево). Она поддерживает работу с категориями, сериями, Drill down, режим фильтрации по клику, сквозной курсор (выделение одинаковых категорий при наведении) и условное форматирование цветом. В последней версии системы для этой визуализации мы нормализовали зуммирование от х1 до х5.Визуализация Tree Map (Дерево)В раздел «Стилизация» добавили переключатель «Вид диаграммы», который переключает тип круговой диаграммы на круговой или кольцевой. Для кольцевой диаграммы еще реализовали возможность отображать итоговое значение внутри кольца.Также для круговой диаграммы добавили возможность управлять количеством сегментов для отображения.В столбчатую, линейную и диаграмму площади добавили новую опцию «Настраиваемый zoom».Доработали визуальный компонент «Плеер речевой аналитики»: в настройки плеера добавили поля URL-адресов для воспроизведения и скачивания аудиофайлов. Этот сервис доступен пользователям, подключенным к сервису NeuroCat. Он даёт возможность записывать, прослушивать, расшифровывать и анализировать телефонные разговоры с клиентами.В отчёты добавили режим наложения, группировки и «без отступов» для того, чтобы пользователь мог в реальном времени «собрать» отчёт, наложив его элементы друг на друга, а затем перемещать целиком внутри рабочего поля.Пример отчёта, собранного вручную до появления “Режима наложения” и “Режима группировки”Режим наложения в отчёте Modus BIОбщий вид дашбордаВ целом, в 2024 году в Modus BI появились новые настройки для визуализаций, которые дают пользователям возможность создавать информативные и понятные отчёты и дашборды. Обновления сделали работу с системой проще и удобнее.Работа с таблицамиЗа последний год мы «прокачали» функционал таблиц в нашей системе как визуально, так и технически. Теперь пользователь может задавать внешний вид сводных таблиц (доступно 2 вида), форматировать текст в ячейках, выполнять групповую обработку строк и не только. В целом, мы реализовали более десяти визуальных и технических доработок системы. Расскажем чуть подробнее про основные из них.В части работы со сводными таблицами нам удалось:Изменить панель управления. Теперь панель управления открывается в правой части отчёта за пределами контейнера таблицы и не мешает отображению данных.Было:Стало:Изменить дизайн и кастомизацию: добавили раздел “Итоги”, “Настройка полей”, разработали два стиля для таблиц - классический и облегчённый.Классический стиль сводной таблицыОблегчённый стиль сводной таблицыСоздать совершенно новый раздел «Условное форматирование», в котором мы собрали все правила оформления полей таблицы.Оптимизировать производительность. Теперь сводная таблица работает быстрее.Также мы сделали более удобной и наглядной для пользователя стандартную таблицу:Добавили возможность условного форматирования для спарклайнов.Было:Стало:Добавили возможность форматирования текста внутри ячеек при помощи html-разметки.Было:Стало:Теперь можно объединить ячейки с одинаковыми значениями внутри одного столбца, а ещё совершать вычисления со значениями в %-ах.Было:Стало:Добавили групповую обработку записей через формы ввода данных. Если пользователю нужно внести одинаковые изменения сразу в несколько строк таблицы, то он может просто выбрать «галочками» необходимые строки и заполнить нужные поля внутри формы ввода данных только один раз.Видно, что за год возможности для работы с таблицами в Modus BI ощутимо расширились, как с точки зрения визуальной обработки ячеек и их содержимого, так и с точки зрения удобства форматирования.Но, конечно, мы не собираемся останавливаться на достигнутом ;)Формы ввода данныхОсновные изменения в части работы с формами для ввода данных коснулись упрощения и ускорения работы с ними:Добавили возможность изменения нескольких строк форм ввода данных одновременно.Добавили множественный выбор — теперь если форма ввода данных включает в себя выпадающие поля, то можно будет выбрать не одно значение из списка, а несколько одновременно.Реализовали автозаполнение полей форм ввода данных при помощи JavaScript в последнем релизе.Исправили взаимодействие с элементом «Панель закладок» при настройке формы ввода данных.Было:Стало:Множественный выбор внутри формы ввода данныхТеперь у пользователя есть возможность не только быстрее заполнять формы ввода данных и не дублировать действия, но и автоматизировать регулярные операции. Например, чтобы в форме автоматически отображалось, кто её заполнял или редактировал в последний раз, можно прописать такое правило один раз и больше не возвращаться к этому вопросу.Работа с фильтрамиЗа прошедший год мы выпустили более десяти обновлений, связанных с упрощением работы пользователей с боковой и верхней панелями фильтров. Главной нашей задачей было полностью пересобрать боковую панель фильтров, чтобы её можно было использовать без добавления контейнеров с фильтрами в отчёт, так как контейнеры в отчёте занимают много места.А ещё важной задачей было организовать работу с фильтрами так, чтобы не только сам пользователь мог быстро настраивать их и сохранять для себя, но и делиться ими с коллегами.Ключевые изменения такие:В режиме просмотра отчета появилась возможность применять общие фильтры, используя боковую панель фильтров. Также мы сделали рестайлинг этой панели.Для диапазонного фильтра с типом отображения «Период» добавили возможность управлять шириной заголовка.Для диапазонных фильтров с типом отображения «По умолчанию» и «Период» настройка ширины заголовка теперь указывается в процентах от ширины контейнера с фильтрами.Добавили возможность использования боковой панели фильтров при наличии переменных в отчете.Добавили возможность использовать и сохранять значения фильтров с типом «По диапазону» в наборах фильтров.Доработали механизм включения/выключения локальных фильтров: теперь фильтры определяются в качестве «локальных» или «общих» только на основании переключателя, независимо от использования в одной или нескольких визуализациях.Добавили возможность переходить по ссылке с набором фильтров и применять их в отчетах, в которых выключена верхняя панель индикации фильтров.Добавили возможность по ссылке открывать отчет с чужим набором фильтров (т. е. использовать наборы фильтров, сохраненные другим пользователем).Доработали верхнюю панель индикации фильтров: добавили отображение значений для фильтров с типом «По диапазону».Было:Старая конфигурация боковой панели фильтровСтало:Новая конфигурация боковой панели фильтровВозможность делиться ссылкой со своим набором фильтровПеременные в отчётеВ 2024 году в отчетах появилась возможность использовать переменные окружения. Теперь пользователь может добавлять в отчёт контейнеры не только с фильтрами, но и с переменными.Переменные помогают переключать логику вычисления данных в визуализациях. Это очень важный функционал, который даёт возможность строить дашборды со сложной логикой вычислений и переключений данных.Функционал модели данныхЗа последний год нам удалось поработать над аналитической системой в части функционала модели данных. Мы стремились сделать взаимодействие с информацией более удобным и эффективным для пользователей. Всего команда Modus реализовала более восьми улучшений, вот самые важные из них:Добавили функционал загрузки данных из внешних источников в Modus BI: напрямую в OLAP хранилище из источников для 1С, Excel, Google Sheets, различных СУБД.Теперь пользователь может создавать модель данных из нескольких загруженных таблиц без программирования в специальном конструкторе.Также при создании правил загрузки данных система проверит таблицы‑приёмники и, если таблица с определённым наименованием уже используется в другом правиле, предупредит об этом пользователя.Оптимизировали функционал модели данных «под капотом», теперь система работает быстрее и стабильнее.Конструктор для создания модели данных из нескольких таблицБезопасностьНе секрет, что данные в системах аналитики содержат ценную бизнес-информацию, поэтому обеспечение их безопасности является приоритетной задачей для Modus. В обычном режиме работы система отслеживала критические, основные действия пользователей на аналитическом портале, что поддерживало необходимый уровень безопасности, но не предоставляло должной детализации действий. За год возможности платформы в части информационной безопасности возросли:Количество логируемых (отслеживаемых) действий пользователей на портале увеличено более, чем в 3 раза.Доработали систему в части взаимодействия с провайдерами аутентификации по протоколу SAML.Добавили проверку статуса ответа с возвратом расшифровки в случае неуспеха.Сопоставление URL из настроек провайдера с URL из запроса переделали из простого сравнения строк на сравнение отдельно хостов, путей, протоколов.Теперь при загрузке на сервер портала можно зашифровать файлы с настройками Modus BI. Это даёт возможность сохранить важные параметры (пароли, адреса серверов и т.п.) в безопасности, даже если злоумышленник проник в ИТ-инфраструктуру компании.Обычно одна сессия пользователя на аналитическом портале ограничена 24 часами без необходимости повторно авторизовываться. Теперь администратор портала может настраивать и ограничивать время пребывания в Modus BI разных ролей пользователей.Мы увеличили возможности для контроля системы администраторами и безопасность портала в целом. Теперь администратор может контролировать пользователей и отслеживать их перемещения и действия внутри системы на всех уровнях.В целом за прошедший год аналитическая система Modus сильно преобразилась и в плане внешнего вида, и в технической части. Наша команда выпустила 9 релизов, вместе с которыми появлялись новые функции и дорабатывались существующие. В основном эти улучшения были направлены на развитие концепции low-code, ведь нам важно, чтобы система была удобной для пользователей и не требовала постоянного привлечения программистов для работы в проектах.В следующем году мы планируем активно развивать self-service и low-code инструменты: повышение интуитивности работы с пользовательским интерфейсом, добавление подсказок и видео, возможности изменения форм ввода данных без перенастройки, рассылки отчётов из аналитического портала, иерархических фильтров и не только. Modus ETL также ждут обновления: добавим возможность загрузки больших данных из Excel, поддержку Python, разработаем новые шаги сценариев.Одним словом, мы не собираемся останавливаться на достигнутом и надеемся, что реализованные и грядущие улучшения сделают работу с системами Modus BI и ETL ещё более приятной и продуктивной для наших пользователей.
****************************************

Дата вызова функции: 2025-01-14 22:31:19
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/companies/ruvds/articles/871288/',), {}
Возвращаемое значение функции: Мастерская любого самоделкина — личное место силы, где всё устроено как должно. Цитадель, дворец, замок, берлога! Это пространство для релаксации, здесь нехотя распрямляются сжатые пружины души и ослабляются натянутые нервы. Сюда приходят для радости и успокоения, для медитаций над железками и деревяшками, вкушать сладость творчества под аромат канифоли. Ниже речь пойдёт о собственной деревенской лаборатории-мастерской, в том числе и для электровакуумных экспериментов, что подразумевает огневые и горячие работы, стеклодувное дело, применение множества химикатов, опыты с электричеством и прочее в таком духе. Как та армейская собака, при всякой возможности стараюсь здесь что-то улучшить или доработать. 

Дела стеклодувные 
Удобство и безопасность работы с огнями и горячим, конечно, зависят от оснащения, тем более в помещении деревянном.

▍ Подставки для горячего. Столярно-стеклодувные работы 
Горячие стёкла и инструмент с горелки для остывания удобно укладывать на небольшую негорючую приподнятость-подставку.

Фото 2. В качестве таковой долгое время использовал кубик-обкатку из обугленной берёзы — инструмент для уменьшения диаметра размягчённой стеклотрубки 

Фото 3. Для охлаждения горячих мелочей приспособил самодельные печные проставки из красного кирпича. Отметим и покрытие рабочего стола — пара слоёв тонкого паронита, невеликой площади и без всякого ограждения 

Здесь стоит напомнить о желательности вертикального положения горячего стеклянного тела вращения — для снижения вероятности растрескивания при охлаждении равномерном и симметричном. Особенно при работе с легкоплавкими (с высоким ТКР — температурным коэффициентом расширения) стёклами. Стеклодувы используют несколько вариантов подставок и штативов для временного хранения-охлаждения стеклянных заготовок, попробуем их все. Будет три варианта: подставка аналогичная кубику Фото 2, но поуже и пониже, с большим числом посадочных мест; массивный кубик с разнокалиберными отверстиями, куда стекляшки вставляются; массивный кубик с торчащими колышками, куда стекляшки нанизываются. Для работы применил сухую берёзу — дерево плотное, тяжёлое, мелкопористое. В наших краях дешёвое и легкодоступное.

Фото 4. Основные заготовки выкроил из доставшейся по случаю сухой толстой берёзовой доски — подобрал куски без существенных дефектов, разметил мелком, отхватил цепной пилой, прострогал 

Фото 5. Чистовые резы в размер делал на торцевой маятниковой пиле. На фото — заготовка для узковысокого штатива с отверстиями 

Фото 6. Основания штативов и подставок 

Фото 7. Изготовление подставок — карандашиком разметил центры ряда крупных отверстий, просверлил их на станке перовым сверлом. Суперзадача — избежать сколов при выходе сверла, решаемая тремя способами: подложить под заготовку аналогичную деревяшку, сверлить не до конца, а заканчивать с обратной стороны; наконец плюнуть на эти цирлихи-манирлихи, и взять заготовку чуть толще, а сколы после сверления сострогать 

Фото 8. Распилив деревяшку по отверстиям вдоль, легко и элегантно имеем сразу две подставки — по обеим сторонам стеклодувной горелки встанут как часовые у мавзолея 

Фото 9. Горячее стекло здесь придётся класть на дерево. Предотвращаем риск тления хорошенько, на глубину 1…2 мм, обуглив рабочие поверхности — в безветренном месте обработал деревяшки инжекционной пропановой горелкой 

Фото 10. Кроме охлаждения стекла, на таких подставках удобно держать нужный для работы инструмент, тем более бывающий в пламени, тем более с паронитовым покрытием стола 

Фото 11. Сверление отверстий в дырчатом штативе 

Фото 12. Сверлильный станок позволяет легко делать отверстия строго вертикальные, ход шпинделя однако у него невелик — глубокие дыры приходится досверливать вручную, используя станочные как направляющие. Перфоратор в этом смысле отличная сверлилка — малооборотистая и мощная 

Фото 13. Отдельный кусок столярной работы — изготовление круглых палочек. Заготовки-брусочки для них выпилил на циркулярной пиле из прямослойной доски 

Фото 14. Превратил брусочки в палочки с помощью ручной фрезерной машинки с простейшим приспособлением, вытягивая через него заготовки включённым шуруповёртом 

Фото 15. Вид на фрезу. Можно использовать любую пазовую (без упорного подшипника), её положение настраивается 

Фото 16. Положение всех участников при работе 

Фото 17. Палочки после фрезеровки имеют грубоватую ершистую поверхность. Отшлифовал её наждачкой средней крупности 

Фото 18. Нарезал заготовок-колышков мелкозубой пилой. Диаметр палочек подобрал так, чтобы после шлифовки они были чуть толще посадочных отверстий — острым ножом подогнал детали, макнул в столярный ПВА, забил в штатив 

Фото 19. Готовые штативы-подставки на рабочем столе 

Фото 20. Готовые штативы-подставки на рабочем столе 

Фото 21. Подставка для горячего стекла и инструмента 

Фото 22. Штативы-подставки на рабочем столе. Хорошо видно и обновлённое его покрытие — куцый лист не особенно огнестойкого паронита заменил на большую твёрдую спецплиту толщиной 10 мм. Материал — нечто современное, отчасти похожее на хрестоматийный асбоцемент, но легче и теплее, с вкраплениями слюды. Плотный, твёрдый, надёжный. Не поленился сделать рекомендуемые классиками бортики — порывшись в деревянном хламе, отобрал подходящие заготовки, прострогал, отпилил в размер, собрал и в нескольких местах прихватил к столу саморезами 

Сварочный стол 
Для изучения азов аргоновой сварки отвёл часть этого же большого стола под общим вытяжным зонтом. Положил на рабочую поверхность имеющийся нетонкий стальной лист, теплоизолировал его от деревянного стола такой же, как и у стеклодувного места, плитой.

Фото 23. Покрытие сварочного места, теплоизоляция 

Фото 24. Нашедшийся стальной лист-покрытие оказался несколько меньше ширины основного стола и требовал культурного обрамления — из мощного уголка выкроил и собрал раму, прикрепил её к столешнице длинными винтиками насквозь 

Фото 25. В отличие от других видов сварки, аргоновая протекает куда как спокойнее и без характерных фейерверков. Мастерская, однако деревянная, и дополнительной противопожарной мерой будет металлическое ограждение сварочного места. Выполнил его из оцинкованной стали — с пользой утилизировал обрезки, оставшиеся при изготовлении вытяжного зонта. На фото — самая длинная деталь, её пришлось склепать из двух частей 

Фото 26. Две коротких боковых стороны изготовлены, подогнаны и закреплены на раме стола 

Фото 27. Сварочное рабочее место в сборе, вид сзади. Ограждение съёмное, состоит из трёх отдельных деталей, соединённых вместе, и крепящихся к раме стола коротенькими болтиками М6. Открытые торцы листов снабдил отбортовкой 

Фото 28 

Фото 29 

Видеонаблюдение 
Деревянная мастерская с деревянной же мебелью, имеет печное отопление, здесь периодически проводятся огневые и горячие работы. Несмотря на пожарную сигнализацию, в ответственные моменты сердце не месте — приходится бегать из дома поблизости, смотреть всё ли в порядке.

Фото 30. Недорого и просто сократить число контрольно-проверочных рейсов помогла обычная видеоняня, работающая по радио. Приём на родительском блоке через десяток метров и сквозь две деревянных стены, отличный. Приборчик сигнализирует и о превышении нормальной температуры в помещении с камерой, что тоже полезно в смысле обнаружения потенциальных возгораний 

Фото 31. Единственный нянин недочёт — отсутствие энергонезависимой памяти и при нужном размещении камеры вверх тормашками, картинку на родительском блоке после каждого включения приходится снова переворачивать рядом манипуляций кнопками. Простейший кронштейн для камеры, собранный из столярного хлама на ПВА и мелкие гвоздики, решил вопрос 

Электричество 
Первое дело в технической мастерской — удобное распределение электричества. Розеток не жалеть! — вот наш девиз. Долой удлинители-переноски и разветвители-тройники. Много и разного света тоже не повредит.

Фото 32. Несколько появившихся электроприборов, в том числе и помянутая аргоновая сварка, требовали культурного подключения. На фото — исторический распределительный в мастерской щиток в жестяной коробке, постепенно обросший, а местами и потерявший актуальность — теперь загромождённый стеллажом, с трудным доступом, тесной коробкой и ненужным электромеханическим, гудящим и скрежещущим, счётчиком. Узел по необходимости дополнен электричеством трёхфазным, и часть обычных нагрузок питается от него, часть же от старой однофазной линии, словом, как-то всё криво 

Фото 33. Собравшись с духом, недрогнувшей рукой разворотил это осиное гнездо — надыбал по закромам гофрошланг и кабель, приобрёл крупную, на вырост, распределительную коробку, дополнительные автоматические выключатели и розетки. Установил в удобном месте, проложил, закрепил, соединил. Серенькая рифлёная трубка для проводов выглядит приятнее, чем ходовой угловатый короб, но иметь с ней дело сложнее. В иных моментах работы можно было найти некоторое сходство со скульптурной группой «Лаокоон борющийся со змеями», впрочем, целеустремлённость и энтузиазм победили 

Фото 34. Итог работ. Распределительный щиток перенесён к двери, где со ступеней к нему легко дотянуться. Теперь при выходе легко полностью обесточить мастерскую, щёлкнув общим рубильником. Все нагрузки питаются от одной трёхфазной линии, никакой путаницы и разлада. Электрооборудование мастерской дополнено пятью блоками мощных розеток в нужных местах. В коробке осталось место для расширения и совершенствования, например, установки дополнительных защитных модулей 

Огнетушитель 
Принятые меры дополнены средствами активными; имевшийся и уже показавший себя в деле выше всяких похвал, но отчасти разряженный, углекислотный огнетушитель, перезаряжен, к нему приобретён свежий и более крупный собрат с хоботом.

Фото 35. Новый и старый огнетушители. Последний перезаправлен — обязательная процедура раз в пять лет. Интересно, что маркировка старых, например, ОУ-5 подразумевает объём баллона, в новых же аналогах цифрой обозначена масса содержащейся углекислоты. Современный ОУ-5 (слева на фото, со шлангом) крупнее, тяжелее, однако недалеко переносить его всё ещё удобно 

Выводы 
В результате проделанного, работать в мастерской стало удобнее и безопаснее, а находится приятнее. Открылись новые перспективы и горизонты, потирая руки, хожу и жмурюсь от удовольствия!

На благо всех разумных существ, Babay Mazay, декабрь, 2024 г.

© 2025 ООО «МТ ФИНАНС»

Telegram-канал со скидками, розыгрышами призов и новостями IT 💻
****************************************

Дата вызова функции: 2025-01-14 22:31:19
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/companies/agima/articles/873576/',), {}
Возвращаемое значение функции: Привет! Меня зовут Никита Грибков, я Flutter-разработчик в AGIMA. Хочу в очередной раз поднять важную тему — CodeStyle. Думаю, что все понимают преимущества единообразного, понятного, красивого кода. Но к сожалению, оформить единые правила для всей команды — это большая задача, и выделить на нее время получается не всегда. Мы решили эту ситуацию изменить.Недавно я осознал, как сильно раздражает разбираться с долгосрочными проектами, которые мы развиваем годами. За это время команда неизбежно меняется, и каждый разработчик привносит свой уникальный стиль. Как результат, понять, что хотел сделать предыдущий автор, бывает настоящим испытанием. Именно поэтому мы с коллегами решили внедрить единый стандарт разработки, которым я теперь делюсь с читателями Хабра.Надеюсь, собранные здесь правила помогут вам сэкономить пару-тройку рабочих часов, но главное — сберегут нервы.Зачем нам вообще CodeStyleНо для начала давайте освежим в памяти, что такое CodeStyle и зачем он вообще нужен. Если совсем просто, то CodeStyle — это свод правил, которые помогают разным разработчикам писать код в одном стиле. Благодаря этому код выглядит одинаково и понятен другим.В целом же можно выделить такие задачи CodeStyle:Улучшение читаемости. Чистый, структурированный и единообразный код легко читать и понимать даже разработчикам, которые впервые работают с проектом. Это снижает порог вхождения в команду и помогает быстро находить ошибки.Стандартизация. Придерживаясь единых правил, разработчики могут писать код, который выглядит так, будто его написал один человек, даже если проектом занимается большая команда. Это особенно важно для масштабируемых приложений.Поддерживаемость. Код с четкими стандартами легче поддерживать и рефакторить. Это сокращает время, необходимое для внесения изменений, и снижает вероятность появления ошибок.Почему при написании Flutter-кода дисциплина особенно важнаFlutter присуща гибкость, которую одновременно можно считать его силой и слабостью. Если нет строгих правил, на проекте может начаться хаос:Разрозненная структура файлов и директорий затрудняет поиск нужных компонентов.Разные подходы к оформлению кода приводят к несоответствиям, которые усложняют понимание и ревью.Непоследовательное использование инструментов и библиотек вызывает путаницу и дублирование функциональности.Дисциплина помогает преодолеть эти вызовы:Создает прозрачную и предсказуемую структуру проекта.Обеспечивает простоту интеграции новых разработчиков.Упрощает работу с внешними зависимостями, управление состоянием и обработку данных.В итоге соблюдение CodeStyle мы воспринимаем не только как инструмент эстетики, но и как важный компонент разработки в целом.Как эффективно внедрить CodeStyleОбучение. Стоит проводить мастер-классы, воркшопы или небольшие лекции, на которых можно показывать преимущества единого CodeStyle. При этом лучше использовать примеры из реальных проектов, чтобы подчеркнуть, как это помогает ускорить работу и улучшить качество кода.Автоматизация. Настройте линтеры и хуки, чтобы разработчики сразу видели, когда их код не соответствует стандартам. Внедрите форматирование кода (например, flutter format) как обязательное требование.Код-ревью. Хорошая идея — сделать ревью обязательным этапом каждого Pull Request. Это не только позволит следить за соблюдением CodeStyle, но и улучшит общий уровень кода в проекте. Подключите документацию CodeStyle как справочник, чтобы ревьюеры могли ссылаться на правила.Командное соглашение. Включите CodeStyle в культуру команды: создайте общее соглашение о том, что стандарты — это не ограничения, а инструмент, который упрощает жизнь каждому разработчику.Инструменты автоматизацииАвтоматизация процессов — ключ к поддержанию стандарта кода. Линтеры и другие инструменты помогают команде соблюдать CodeStyle без лишних усилий.Чтобы настроить линтеры, нужно добавить flutter_lints в проект для автоматической проверки базовых правил:dev_dependencies:
flutter_lints: ^2.0.0Это обеспечит соблюдение стандартов форматирования и поможет избежать распространенных ошибок.Pre-commit хуки — еще один важный элемент автоматизации. Интегрировать их можно с помощью инструментов вроде Husky или Lefthook, чтобы автоматически проверять и форматировать код перед каждым коммитом.Базовые правила нашего CodeStyleДиректорий и файлыИменуем файлы и директории только по шаблону name_case. Те и другие обязательно должны соответствовать архитектуре папок DDD. Названия файлов должны соответствовать первому и главному используемому классу внутри файла. example_package/
 └─ file_example.dart
 └─ slider_menu_example.dartФорматированиеРасставляются все возможные запятые, в соответствие с правилами линтера (Trailing commas).Trailing commas (запятые в конце последнего элемента) — это небольшая, но важная деталь, которая помогает улучшить читаемость сложных структур кода и упрощает автоматическое форматирование.Выносим части кода, которые можем выделить, в отдельные функции/методы. Это повышает читаемость кода и сокращает размер основного Widget.ListView.separated(
  shrinkWrap: true,
  itemCount: recentSearches.length,
  separatorBuilder: _separatorBuilder,
  itemBuilder: (
		BuildContext context,
		int index,
	) {
    final queryItem = recentSearches[index];

    return _LastQueryCard(
      title: queryItem.query,
      onTap: () => context.read<GlobalSearchBloc>().add(
            RemoveRecentSearchEvent(
              query: queryItem,
            ),
          ),
    );
  },
),


Widget _separatorBuilder(
	BuildContext context,
	int _,
) {
	final themeExtension = AppTheme.themeExtension(context);
	final s16Value = themeExtension.sizes.s16Value;

	return SizedBox(
		height: s16Value,
	);
}Переменные и функцииИменование переменных: примеры хорошей практикиИменование переменных — важный аспект читаемости кода. Хорошо подобранные имена помогают разработчикам быстрее понять назначение переменной и улучшить сопровождение проекта.Основные правила:Использовать camelCase для локальных переменных и свойств класса. Это стандарт в Dart.final userAge = 25;
final isActive = true;Для констант и глобальных переменных рекомендуется использовать SCREAMING_SNAKE_CASE:const MAX_CONNECTIONS = 10;
const API_URL = 'https://api.example.com';Имена должны быть понятными и отражать смысл переменной:// Плохо
int x = 25;
// Хорошо
int userAge = 25;Приватные методы и геттеры: минимизация публичных функцийВ архитектуре приложений важно скрывать внутренние детали реализации и оставлять публичными только те методы и свойства, которые нужны внешнему коду. Приведу примеры.Приватный метод:class UserManager {
  // Приватный метод используется только внутри класса
  String _hashPassword(String password) {
    return 'hashed_$password';
  }
  void saveUser(String username, String password) {
    final hashed = _hashPassword(password);
    // Сохранение данных...
  }
}Приватный геттер:class Config {
  String get _apiKey => 'super_secret_key'; // только для внутреннего использования
}Рекомендации:Оставлять публичными только те методы, которые реально необходимы для работы внешнего кода.Упрощать интерфейс классов, скрывая сложные детали.Классы и архитектураОбъявление конструкторов: выбор между именованными и фабричнымиКонструкторы в Dart позволяют гибко управлять процессом создания объектов.Именованные конструкторы часто используют для разных способов инициализации объекта:class User {
  final String name;
  final int age;
  User(this.name, this.age);
  // Именованный конструктор
  User.fromJson(Map<String, dynamic> json)
      : name = json['name'],
        age = json['age'];
}Фабричные конструкторы удобны, когда требуется управлять созданием объектов или возвращать кэшированные экземпляры:class Singleton {
  static final Singleton _instance = Singleton._internal();
  factory Singleton() => _instance;
  Singleton._internal();
}Примеры декомпозиции виджетов и рекомендаций по Container:Громоздкие Build-методы делают код нечитаемым. Вместо этого стоит разделять логику на мелкие виджеты:class UserProfile extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        ProfilePicture(),
        UserName(),
      ],
    );
  }
}


class ProfilePicture extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return CircleAvatar(radius: 40, child: Text('A'));
  }
}
class UserName extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Text('Alex Johnson');
  }
}Также Container стоит использовать, только если нужны стили (паддинги, отступы, декорации). Для других целей лучше выбирать специализированные виджеты:// Плохо
Container(
  child: Text('Hello!'),
);
// Хорошо
Padding(
  padding: const EdgeInsets.all(8.0),
  child: Text('Hello!'),
);Управление состояниемОрганизация папок в BloCЧеткая структура папок помогает держать код в порядке. Рекомендуемая структура для Bloc:lib/
 application/
    auth/
      auth_bloc.dart
      auth_event.dart
      auth_state.dart
    settings/
      settings_bloc.dart
      settings_event.dart
      settings_state.dartОптимальное решение — использовать реализацию BloC от flutter_bloc + Equtable.BloC-виджетыДля виджетов BlocListener, BlocBuilder, BlocConsumer стоит всегда указывать параметры ограничения обновления состояния: listenWhen и buildWhen.BlocBuilder<ExampleBloc, ExampleState>(
  buildWhen: (
    ExampleState previous,
    ExampleState current,
  ) => previous != current,
  builder: (
    BuildContext context,
    ExampleState state,
  ) {
  
   ...
   
  },
);Также необходимо использовать явно BlocSelector для определения обновления состояния конкретной части виджета.  BloC–blocВ данном случае такой подход дает нам удобство в использовании самих ивентов и их реализаций.class ExampleBloc extends Bloc<ExampleEvent, ExampleState> {
  final ExampleInteractor _interactor;

  ExampleBloc(
	  required ExampleInteractor interactor
	  ) : _interactor = interactor,
	   super(
	      const ExampleLoadingState(),
	    ) {
     on<_PutDate>(_putDate);
  }

  Future<void> _putDate(
    _PutDate event,
    Emitter<ExampleState> emit,
  ) async {
    final putDateOrFailure = await interactor.putDate(date: date);

    putDateOrFailure.fold(
      (failure) => emit(
        ExampleFailureState(
          error: failure.error,
        ),
      ),
      (unit) => emit(
          ExampleFatchedState(),
        ),
    );
  }
}BloC–stateState может быть реализован в виде общего класса с данными PageState, как изложено в документации [[BloC]], но есть вариант, который соответствует более узкой логике.Наш state выглядит в архитектуре всё так же. У нас есть ExampleLoadingState, ExampleFailureState, ExampleFetchedState. Каждый из state принимает в себя те параметры, которые нужны под данную реализацию.ExampleLoadingState Не имеет параметров => его задача индексировать state, на основе которого будет отрисован loader.final class ExampleLoadingState extends GlobalSearchState {
  const ExampleLoadingState();
}ExampleFailureStateИмеет точную реализацию для отображения текста ошибки. final class ExampleLFailureState extends GlobalSearchState {
  final String error;

  const ExampleLFailureState({required this.error});

  @override
  List<Object> get props => [error];
}ExampleFatchedStateВ реализацию данного state передаются данные, которые нужны для отображения основного контента страницы. final class ExampleLFatchedState extends GlobalSearchState {
  final List<ExampleClass> result;

  const ExampleLFatchedState({required this.result});

  @override
  List<Object> get props => [result];
}State не должны знать друг о друге. Они должны отвечать за одну задачу, принцип единой ответственности S.O.L.I.D#S.Работа с данными и HTTPДобавление интерцепторов позволяет управлять запросами на уровне Dio. Пример настройки:dio.interceptors.addAll([
  InterceptorsWrapper(
    onRequest: (options, handler) {
      /// Через метод [onRequest], можем прослушивать наши запросы,
      /// и обрабатывать их в консоль.
      return handler.next(options);
    },
    onResponse: (response, handler) {
      /// Обработка [response]
      return handler.next(response);
    },
    onError: (error, handler) async {
      /// Обработка [error]
      if (error.type == DioExceptionType.connectionError) {
        /// Прослушиваем тип ошибки и обрабатываем интернет соединение
      }
      var code = error.response?.statusCode ?? 0;
      if ((code >= 300) && (code < 400)) {
        /// Обработка ошибок code >=300 && code <400
        ///
        /// ```example
        /// final response = error.copyWith(
        ///   error: ServerResponse(
        ///     err: error.toString(),
        ///     code: (error.response?.statusCode ?? '').toString(),
        ///     body: error.response?.data,
        ///   ),
        /// );
        /// ```
        /// return handler.reject(response);
      } else if ((code >= 400) && (code < 500)) {
        /// Обработка ошибок code >=400 && code <500
      } else if (code > 500) {
        /// Обработка ошибок code >500
      }
    },
  ),

  // adding logger
])Примеры антипаттерновЧтобы избежать дублирования кода, следует выносить повторяющиеся элементы в отдельные виджеты:class CustomButton extends StatelessWidget {
  final String label;
  const CustomButton({required this.label});


  @override
  Widget build(BuildContext context) {
    return ElevatedButton(onPressed: () {}, child: Text(label));
  }
}ИтогоЕдиный CodeStyle стал для нашей команды решением, которое не только упорядочило работу, но и кардинально изменило подход к разработке. Мы избавились от хаоса в структуре проектов, стандартизировали управление состоянием, форматирование и работу с данными. В итоге код стал понятным, поддерживаемым и легким для масштабирования.А это, в свою очередь, позволило ускорить код-ревью, упростить интеграцию новых разработчиков и обеспечить высокое качество продукта. Теперь, вместо того чтобы тратить время на разбор несогласованных решений, мы фокусируемся на создании новых функций.Я даже могу утверждать, что CodeStyle стал не просто инструментом, но и основой нашего успеха.Если у вас остались вопросы, буду рад ответить в комментариях. Рассказывайте, как вы внедряли CodeStyle на своих проектах и насколько легко это было. В общем, давайте обмениваться опытом. А если вам интересен Flutter, подписывайтесь на телеграм-канал нашего Head of Mobile Саши Ворожищева.Что еще почитатьИнтеграция TFLite во Flutter: внедряем модели машинного обучения в мобильное приложениеRive-анимация для Flutter-приложений: почему мы любим ее больше Lottie, когда ее применять и какие фишки использоватьSQL vs NoSQL: как выбрать архитектуру БД для мобильного приложения, чтобы потом не пришлось ничего переписывать
****************************************

Дата вызова функции: 2025-01-14 22:31:19
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873572/',), {}
Возвращаемое значение функции: Продолжаем проводить обзор функциональных возможностей программы 1С ЕРП в части управления продажами. В предыдущей статье мы рассмотрели настройки, а также процесс создания документов Заказ клиента, Счет на оплату и Реализация товаров и услуг. В данной статье проведем обзор функциональных возможностей программы 1С ЕРП в части управления розничными продажами.Автоматизация розничной торговли является ключевым фактором для повышения эффективности и конкурентоспособности бизнеса. Для этого система 1С ЕРП содержит в себе все необходимые функциональные возможности.  Система предлагает комплексное решение для автоматизации всех аспектов розничной торговли, от возможности подключения торгового оборудования до управления лояльностью покупателей.Система автоматизации продаж в 1С ЕРП интегрируется с кассовым оборудованием, что обеспечивает быстрое и точное проведение операций на кассе. Она поддерживает различные формы оплаты, включая наличный и безналичный расчет, а также кредитные схемы. Это упрощает процесс обслуживания клиентов и ускоряет операции. Кроме того, система позволяет эффективно управлять акциями и скидками, что способствует привлечению и удержанию клиентов.Одним из преимуществ автоматизации с «1С: ERP» является возможность детального анализа клиентских данных. Система собирает и обрабатывает информацию о покупательских привычках, что позволяет сегментировать клиентскую базу и предлагать персонализированные программы лояльности. Такие программы помогают увеличить повторные продажи и укрепить отношения с клиентами. Автоматизированные рассылки и уведомления позволяют поддерживать активную коммуникацию с клиентами, информируя их о новых предложениях и акциях.Прежде чем приступать к демонстрации возможностей функционала розничных продаж пройдемся по настройкам.Настройка розничной торговли в 1С ЕРПОтрываем настройки розничных продаж. Для этого переходим в настройки подсистемы Продажи и переходим в настройки подраздела Розничные продажи.Разберем следующие основные настройки:Розничные продажи – данная функциональная опция включает возможность использования функционала розничной торговли в 1С ЕРП;Назначать скидки перед оплатой в чеке ККМ  - данная функциональная опция включает возможность назначения скидок при попытке оплатить товар (при нажатии на одну из кнопок регистрации оплаты покупателем);Хранить отложенные чеки – данная опция позволяет хранить отложенные чеки указанное количество дней. Каждый день в программе запускается обработка, которая анализирует даты отложенных чеков и удаляет те чеки, срок которых вышел;Операция при закрытии кассовой смены – в данном параметре указывается, что будет с чеками ККМ при закрытии кассовой смены. Часто, на практике, чеки при закрытии смены архивируют, чтобы можно было обратиться  ним в будущем, например, для оформления возврата от покупателя;Хранить заархивированные чеки – в данной настройке необходимо указать, сколько будут храниться заархивированные чеки. Так же, как в случае с отложенными чеками, в программе автоматически по расписанию запускается обработка (регламентное задание) и удаляет чеки;Подарочные сертификаты  - данная функциональная опция включает возможность создавать и вести учет подарочных сертификатов. В программе доступны следующие операции с подарочными сертификатами: выпуск, активация, аннулирование.Несколько касс ККМ – данная возможность позволяет использовать несколько касс ККМ. То есть в программе будет возможность автоматизировать два и более магазина. Мы рассмотрели основные настройки розничных продаж в подсистеме Продажи. Теперь перейдем к общим настройкам системы. Переходим в НСИ и администрирование и открываем РМК и оборудование.Включаем возможность использования подключаемого торгового оборудования. Это позволит в дальнейшем подключает торговое оборудование, которое используется для автоматизации розничного магазина (Контрольно кассовая техника (Касса ККТ или онлайн касса), эквайринговый терминал, сканер, принтер этикеток). Вернемся к подключению оборудования чуть позже. Переходим к созданию склада (магазина). Для этого переходим в справочник Склады и магазины и создаем новый розничный магазин по команде Создать à Розничный магазин.  Склад с типом Розничный магазин отличается от склада с типом Оптовый склад тем, что на таком складе можно оформлять документ оптовой торговли и оформлять розничные продажи. В оптовом складе можно только  оформлять документы оптовых продаж.При установке флажка Контролировать свободные остатки программа не дает отгружать товары в минус. В программе предусмотрели возможность отключения контроля остатков, так как в некоторых случаях без этого не обойтись. Но стоит пользоваться этим осторожно.В поле Розничный (общий) вид цен указывается вид цены цен по котором будут автоматически заполняться при сканировании товара в рабочем месте кассира.Индивидуальный вид цен – в данном поле можно создавать индивидуальный вид цены для данного магазина. Установленные цены по данному виду цен будут действовать только в этом магазине.  Теперь необходимо создать Кассу ККМ, для этого переходим в справочник Кассы ККМ. Создаем новый элемент по соответствующей команде.   В открывшейся форме создания кассы ККМ заполняем следующие основные реквизиты:Организация – указывается организация от лица которого будет оформляться продажа. Поле обязательно для заполнения;Тип кассы – указываем тип, от которого будет зависеть процесс оформления розничной продажи. Например, если выберем Фискальный регистратор, то продажи будут регистрироваться чеками ККМ, а отчет о розничных продажах будет создаваться и заполняться автоматически при закрытии кассовой смены. Если выберем тип Автономный магазин, то продажа будет регистрироваться документом Отчет о розничных продаж. Документ можно будет заполнить вручную.Валюта – указываем валюту в розничной продаже в данном магазине;Склад – указываем склад (магазин), с которого будут списываться остатки товаров при продаже;Регистрационный номер – заполняем для информации. Можно не заполнять;Серийный номер – заполняем для информации. Можно не заполнять;Подразделение – подразделение заполняется в качестве аналитики, данное подразделение в дальнейшем будет заполняться в отчетах о розничных продаж;Наименование – заполняется автоматически.Заполняем данные реквизиты и сохраняем кассу ККМ.Теперь переходим к настройке торгового оборудования. Для этого возвращаемся в РМК и оборудование и открываем список подключаемого торгового оборудования.  Создаем новое оборудование по соответствующей команде.В первую очередь создаем кассу ККТ. Интеграция ККТ 1С ЕРП обеспечивает автоматизацию процесса продажи и учета, что является важным аспектом для бизнеса, стремящегося к повышению эффективности операций.Во-первых, использование ККТ в 1С ЕРП позволяет автоматизировать регистрацию продаж, что значительно упрощает процесс кассового обслуживания. Это не только ускоряет обработку транзакций, но и минимизирует вероятность ошибок, связанных с человеческим фактором. Во-вторых, система обеспечивает соответствие законодательным требованиям. 1С ЕРП позволяет настраивать параметры работы ККТ в соответствии с актуальными нормативами, что важно для избежания штрафов и санкций. Заполняем следующие реквизиты: Тип оборудования – выбираем значение ККТ с передачей данных;Драйвер оборудования – выбираем драйвер в соответствии с подключаемым оборудованием;Организация – выбираем ту организацию, на чье имя зарегистрирована касса ККМ;Наименование – заполняется наименование автоматически;Рабочее место – заполняется автоматически текущим рабочим местом (определяется исходя из компьютера и пользователя);Серийный номер – заполняется справочно.Заполняем данные и сохраняем оборудование. Далее нажимаем на кнопку Параметры подключения и устанавливаем внешнюю компоненту по соответствующей команде.  Теперь переходим к созданию эквайрингового терминала. Использование эквайрингового терминала в 1С ЕРП существенно упрощает процессы обработки платежей и управления финансовыми потоками. Встраивание терминала в систему позволяет автоматизировать операции, связанные с приемом безналичных платежей, что повышает скорость обслуживания клиентов и сокращает вероятность ошибок, связанных с ручным вводом данных.Интеграция эквайрингового терминала с 1С ЕРП обеспечивает синхронизацию данных о продажах и поступлениях средств в реальном времени. Это позволяет вести более точный учет и анализ финансовых показателей бизнеса. Кроме того, автоматизация процесса оплаты способствует улучшению клиентского опыта, так как покупатели могут быстро и удобно расплачиваться картами, что особенно важно в условиях растущего спроса на безналичные расчеты.Создание эквайрингового терминала выполняем тем же образом, выбираем лишь другой тип оборудования.Теперь переходим к настройкам РМК, для этого открываем соответстующее рабочее место настройки. Создаем новый элемент. В настроке РМК заполняем следующие данные: Рабочее место - заполнится текущим рабочим местом. Настройка горячих клавиш – выбираем готовый или создаем говый набор горячих клавиш. Горячие клавиши используются для быстрого выполнения определенной команды сочетанием клавиш;    Использовать авторизацию – при использовании данного функционала можно продавцы смогут авторизовываться в рабочем месте кассира с помощью карт с штрихкодом;Кто может быть продавцом – можно выбрать одного или оба значения из предложенных (кассир и менеджер торгового зала). При выборе только значения Кассир, сменить продавца в рабочем месте кассира будет невозможно. При выборе менеджера торгового зала в процессе работы в любой момент можно выбрать продавца. Это позволяет регистрировать продажи на конкретного продавца. Это важно, когда система мотивации использует персональные продажи.На вкладке Кассы ККМ указываем кассу ККМ, которое мы создали и указываем оборудование. В нашем примере мы используем эмулятор, то есть продажи будем выполнять в тестовом режиме без подключения оборудования, поэтому мы устанавливаем соответствующий флажок (в реальности необходимо будет указать оборудование). Флажок – Автоматическая инкассация устанавливается, когда необходимо чтобы автоматически создавалась выемка денежных средств при закрытии кассовой смены.  Переходим на следующую вкладку Кассы. Здесь мы заполняем кассу организации и оборудованием кассы ККМ. Этим самым мы связываем кассу организации с кассой ККМ. В будущем это поможет автоматически определять кассы при оформлении выемки и внесения денежных средств в кассу ККМ. На вкладке Эквайринговые терминалы заполняем терминал и указываем его оборудование и оборудование кассы ККМ.В настройках терминала заполняется наименование, договор подключения к платежной системе, банковский счет, эквайер (контрагент), номер терминала.  Остановимся подробнее на договоре эквайринга. В договоре эквайринга на вкладке Основное заполняем данные эквайера и организации. На вкладке Расчеты заполняем: Платежи проводятся через – определяем способ проведения платажей;Срок зачисления на счет – указываем срок, за который будет происходить начисление платежей, данная информация будет отображать в отчетах;Вести детальный учет транзакций / сверять транзакции в отчете банка по эквайрингу – данная функуиональная опция позволит создавать / загружать предоставляемые банком отчет банка по эквайрингу, которая включает в себя все платежи за один день в детализации;Разрешить возврат оплаты клиентам без заявок на расходование денежных средств – при установке данного флажка система позволит оформлять возврат денег без создания и согласования заявки на расходовании денежных средств;Ставка комиссии – в данной настройке указывается способ определения процента комиссии, а также процент, при фиксированном способе;Комиссия учитывается – данным переключатель определяется объект, в котором будет заполняться комиссия банка. На вкладке Учетная информация заполняется аналитика по оплатам. Возвращаемся к настройке РМК. На вкладке Платежные системы можно настроить вариант работы с ссылкой СБП. Система Быстрых Платежей (СБП) в программном обеспечении 1С:ERP представляет собой интеграцию, которая позволяет предприятиям эффективно управлять финансовыми операциями, ускоряя процесс обмена платежами с партнерами и клиентами. Внедрение СБП в 1С ЕРП обеспечивает мгновенные переводы средств, снижая транзакционные издержки и минимизируя время ожидания. Сохраняем настройки РМК. Все настройки для розничной торговли выполнены. Переходим к демонстрации регистрации розничных продаж.Как пробить чек ККМ в 1С ЕРПЗапускаем рабочее место кассира в подсистеме Продажи. В первую очередь необходимо открыть кассовую смену, для этого нажимаем на кнопки Операции с ККМ –> Открыть смену. Появится информация об открытии смены.Далее необходимо выбрать продавца, выбираем из справочника вручную, либо сканируем штрихкод карты продавца. Продавца можно поменять в любой момент.   Теперь можно добавлять товары в чек ККМ. Для этого сканируем товары сканера штрихкода, либо подбираем товары вручную. Для этого нажимаем на кнопку Поиск. Как подбирать товары мы уже рассматривали в другой статье, когда проводили обзор по процессу создания коммерческого предложения. Подбор в чеке работает аналогично. Выбираем необходимые товары и нажимаем на команду Перенести в документ. Для оплаты наличными нажимаем на команду Оплатить наличными. Заполняем сумму, которую вносит покупатель и нажимаем на команду Пробить чек.При необходимости можно указать номер телефона или электронную почту и отправить ссылку на электронный чек. Для создания нового чека нажимаем на соответствующую кнопку. Теперь примем оплаты с помощью эквайринга. Для этого после подбора товаров нажимаем на кнопку Оплатить картой. Если бы эквайринговый терминал был интегрирован с 1С, то в этот момент на эквайринге вышло бы оповещение о готовности принять карту для оплаты. После того как покупатель приложил бы карту и ввел пин код, чек автоматически пробился бы. Но в нашем примере терминал не подключен (не все магазины напрямую подключают терминал к программе из-за ряда причин, поэтому данному примеру имеет место быть). Всплывет сообщение с вопросом прошла ли оплата на терминале, нажимаем Да при успешной оплаты. Далее вручную пробиваем чек. Теперь примем смешанную оплату. Указываем форму и сумму части оплат. Можно оплатить наличными, картой или подарочным сертификатом. Пробиваем чек.Если необходимо отложить чек, то в процессе формирования чека нажимаем Новый чек. В этом случае программа предложи отложить чек с резервированием или без. Чтобы продолжить отложенный чек нажимаем на кнопки Прочие операции à Продолжить. Выбираем чек и завершаем оформление. Как сделать Чек ККМ на возврат товаров в 1С ЕРПДля оформления возврата необходимо нажать на кнопку Возврат по чеку или Возврат без чека. Выбираем первый вариант (второй вариант используется, когда каким конкретно чеком была оформлена продажа неизвестно).Выбираем необходимые товары и нажимаем Оформить возврат.  Выбираем форму оплаты и пробиваем чек. Формирование отчета о розничных продаж в 1С ЕРПВ конце дня кассовую смену необходимо закрыть. Для этого нажимаем на кнопки Операции с ККМ à Закрыть смену.Отроется документ Кассовая смена, где будут указаны сформированные отчеты: отчет по розничным продажам и по розничным возвратам.  В отчете о розничных продаж автоматически заполнилась информация о продажах со всех чеков. На вкладке Товары заполнены товары, количество проданных товаров и сумма продажи. На закладке Оплата платежными картами заполняется информация по оплатам картами через эквайринг. На закладке Оплата подарочными сертификатами заполняется информация о приеме оплат подарочными сертификатами. На следующих двух закладках отображается информация о начисленных бонусных баллах и информация о приеме части оплаты бонусными баллами.  В отчете о розничных возвратах отображается информация по возвратам товаров, которые были приняты в текущей смене.ЗаключениеВ данной статье мы рассмотрели функциональные возможности розничных продаж в программе 1 ЕРП:Как настроить розничные продажи;Как создать чек ККМ;Как создать возврат товаров в рознице;Как сформировать отчет о розничных продаж.Программа 1С ЕРП имеет широкий функционал, который позволяет полностью автоматизировать процессы в розничном магазине.
****************************************

Дата вызова функции: 2025-01-14 22:31:19
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873568/',), {}
Возвращаемое значение функции: Я, честно говоря, даже не ожидал, что моя статья про косяки с миграцией Росбанка под крыло Т-Банка вызовет такой интерес, набрав более 400 комментариев. Видимо, тема достаточно животрепещущая.Сегодня ситуация с моей проблемой была решена.Поскольку прошлая статья уже ушла вниз в топиках, а интерес, чем все закончилось, полагаю, мог остаться (хотя могу и ошибаться), то рассказываю.И да, Хабр - не жалобная книга. Если интереса к окончанию истории нет, то я быстро это пойму )Вкратце напомню, что произошло.С 1 января 2025 года Росбанк стал частью Т‑Банка.Счета клиентов Росбанка перешли в Т-Банк.Вечером 1 января мои счета все еще не видны в приложении банка и в ЛК на их сайте (по плану должны были появиться в приложении Т-банка примерно в 11:00).При общении с поддержкой выяснилось, что мои счета перешли в банк, а актуальный номер телефона почему-то нет.В рамках чата не получилось установить номер телефона.От меня потребовали, чтобы я принял представителя банка для идентификации меня по паспорту.Приезжает представитель Т‑Банка, смотрит мой паспорт. От фото меня и паспорта для сбора биометрических данных отказываюсь. Представитель банка просит ждать звонка от банка и уезжает.2 и 3 января поддержка меня уверяет, что проблема будет вот-вот решена.4 января выясняется, что сроки решения проблемы - до 14.01.2025 включительно.Периодически звоню в банк, чтобы выяснить, как продвигается решение проблемы.Попутно выяснилось - проблема в том, что для меня в Т-Банке заведены две учетные записи.Первая учетка была заведена пару лет назад в Тинькофф еще до перехода Росбанка под крыло Т-Банка. Это произошло, когда я оформлял ОСАГО в Тинькофф.Вторая учетка была создана при миграции данных Росбанка в Т-Банк. При этом номер телефона при миграции исчез.Смержить две учетки поддержка не может, кейс передан в "профильное подразделение".Напомню, что все это время банк фактически отказывает мне в доступе к моим деньгам.Сегодня при звонке меня наконец переключили в "профильное подразделение".Для решения проблемы пришлось осуществить видеозвонок с представителем банка. Паспорт не показывал.После этого данные моих счетов наконец появились в приложении.Ура.Задал в чате вопрос о компенсации (кстати, я премиальный клиент).Здравствуйте! Зачислить компенсацию не получится. Решение о выплате компенсации принимается индивидуально и остается на усмотрение компании.Здравствуйте. В таком случае мне больше не интересен банк, которому настолько наплевать на своих клиентов.Сожалеем, что у вас сложилось такое впечатление о нашем банке. Мы всегда рады помочь вам, однако, к сожалению, в данном случае с нашей стороны решить вопрос не предоставляется возможным.О чем вы говорите? У меня 2 недели не было доступа к моим счетам!!! Нет у вас никакого сожаления.Я понимаю, как важно, чтобы банк, с которым сотрудничаешь, мог решать все возникающие вопросы и сложности. Мне искренне жаль, что в сложившейся ситуации с нашей стороны решить вопрос не получится. Поверьте, если бы была возможность что-либо предпринять, мы бы обязательно ею воспользовались. Простите, что не удалось получить желаемый результат.С вашей стороны это с какой? Вы банк, и банк мне отказывает.Сожалеем, что вам не удалось получить компенсацию, на которую рассчитывали*. Однако решение обращения не получится изменить.(* тут не очень понятно, я что-то конкретное у банка не требовал, вопрос был о том, есть ли какая-то компенсация по моему кейсу).Итого имеем - с точки зрения Т-Банка, отсутствие у клиента доступа к счетам в течении двух недель - мелкая проблема, не стоящая компенсации.
****************************************

Дата вызова функции: 2025-01-14 22:31:19
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873564/',), {}
Возвращаемое значение функции: ДисклеймерТак как я не являюсь профессиональным программистом, не создаю игры, 3D модели и прочее, а только делюсь своим личным опытом – то этот материал для новичков, которым интересна данная тематика. В нём могут быть ошибки, неточности и заблуждения. Если вам есть, что добавить – милости прошу.Итак, у вас есть большое желание сделать ремейк игры, перенести её на новый движок или просто посмотреть, а как оно сделано.Для начала надо выбрать игру, я предлагаю обратить внимание на игры эпохи PS2 и X-box original. Самый "распространённый" движок на тот момент был RenderWare.  Кроме всем известных GTA 3, VC, SA и Manhunter 1-2, на нём были сделаны такие “шедевры” как Бой с тенью 1-2, Меченосец и … Антикиллер. Мой выбор, в своё время пал на DarkWatch. Первая моя попытка вытащить модели, была с использованием Ninja Ripper.Последнюю версию на тот момент 2.0.13, я приобрел у создателя через discord.Но всплыл нюанс – рип с PCSX2 выходил ужасно кривой, с которым пришлось бы долго возиться, чтобы получить хоть что-то удобоваримое. В Blender рип импортировался с нарушением пропорций, есть несколько видео как это исправить, в том числе и на канале автора рипера, но напряжно.А вот с версии x-box очень даже хорошо (с правильными пропорциями) рипались из Cxbx Reloaded. Но опять проблема, чтобы рипнуть надо пройти игру, а на моём ПК игра вылетала в самых неожиданных местах через каждые 5 минут. В конце концов терпение лопнуло, когда я не смог за неделю пройти один жалкий уровень. В тот момент я решил сменить подход, собственно, про него я и буду рассказывать. В большинстве своём все ресурсы игры хранятся в архивах, может повезти если распаковать получиться через обычный архиватор. Если не повезло, придётся искать распаковщик – самый известный это QuickBMS к нему есть множество плагинов. Для Darkwatch же мне подошёл MultiEx-Commander 4.3.0.Распаковав все файлы .pck с образа x-box версии, я получил кучу папок и файлов, которые ничуть не облегчили понимание, а чем собственно их открывать. Noesis  Добрые самаритяне написали кучу плагинов для Noesis позволяющие прочитать модель и экспортировать её в разные форматы.Но для Darkwatchтакого плагина не было, попытки использовать ПО которым модифицируют GTA не помогли. Пока я не наткнулся на RWAnalyze.RWAnalyze – позволяет заглянуть внутрь файлов “моделей”, в моём случае это были файлы .rx1В этих файлах хранятся текстуры модели, mesh (verticesи faces, они же точки и грани), кости скелета и его веса. RWAnalyze строит дерево чанков (звеньев цепи) и показывает, где в файле какие данные начинаются и как распределены.Обязательный инструмент для исследования моделей ModelResearcher -  сейчас автор выложил в бесплатный доступ Pro версию. https://mr.game-viewer.orgВ ней вы можете методом тыка, или по уже имеющимся данным воссоздать 3D модель, вручную указав откуда брать данные координат точек, граней, UV.Как пользоваться этим ПО есть руководства на сайте автора. Если будет много желающих (сильно сомневаюсь) напишу подробней как использовать.Спустя несколько дней, разобравшись в нескольких моделях с помощью ModelResearcher, пришло понимание, что это займет много времени, да и хотелось автоматизировать процесс. Вот тогда я решил написать свой плагин для Noesis. Плагины на Python, процесс не сильно сложный в плане алгоритмов, по крайней мере мне так казалось в начале, но затруднение вызывает по сути отсутствующие нормальные инструкции и руководства. На ютубе нашёлся только один автор, который разбирал процесс создания плагина. С горем пополам я приступил к созданию, что заняло достаточно много времени. Удалось обработать 99% моделей, но этого мне показалось мало и захотелось до кучи ещё добавить анимации моделям. И здесь всё стало сильно сложнее - кости, скелеты, кватернионы.   Посмотреть модели можно  Ужасно кривой плагин Если вдруг найдутся люди которым это интересно – напишу как я писал плагин и сложности с которыми столкнулся.
****************************************

Дата вызова функции: 2025-01-14 22:31:20
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873396/',), {}
Возвращаемое значение функции: Привет, Хабр!В какое замечательное время мы живем, правда? У нас есть отличные технологии и медицина, которая и не снилась людям прошлого. Но пять лет назад произошло нечто, что стало суровой насмешкой над всеми, кто верил, что времена страшных болезней прошли. Не смотря на это, многие до сих пор считают, что все самое худшее позади. Однако, вместо вирусов есть кое-что хуже и это грибки.  На обзоре книга, которая призвана привлечь внимание общественности к потенциальной угрозе в виде грибков. Автор книги утверждает, что грибки сильно недооценены и что их время еще не настало, но может настать. И в этом случае общий социоэкономический ущерб может быть беспрецедентным. Все ли так на самом деле ужасно? В чем опасность этих самых грибков, почему они до сих пор не поработили мир (и все такое) и что делать, если вы вдруг поняли, что становитесь грибом ? После прочтения обзораВ ней вы не найдете каких то супер знаний – это все же не учебник. Это рассуждения автора, интерпретация мыслей ее коллег-ученых, и всех остальных, подкрепленные реальными ситуациями. Тем не менее, вы точно лучше сможете понимать природу экологических взаимодействий в мире и понимать, что может привести к очень неприятным ситуациям или даже катастрофам.Несколько слов об автореАвтор книги – Эмили Моноссон, специалист по экологической токсикологии, PhD. Она является членом Института независимых ученых Ронина и адъюнкт-профессором Массачусетского университета в Амхерсте. В общем, человек, мнение которого, по крайней мере, не стоит игнорировать. У Эмили огромный опыт работы с различными токсичными веществами: от полихлорированных дифенилов до токсинов, разрушающих эндокринную систему. Такой опыт оказался основополагающим при изучении токсикологического действия грибков на другие организмы, что легло в основу книги. Она описала как грибки ослабляют организмы, заставляют их делать то, что способствует их распространению (буквально грибки могут поработить другой организм).Эмили МоноссонПриступим к самой мякоти – книге.Открывается книга предисловием с объяснением некоторых нюансов. Вроде того, что будут использованы аббревиатуры и общепринятая метрическая система (например, температура указана по шкале Цельсия, а не Фаренгейта и т.п.). Далее идет введение. Здесь в художественном стиле рассказывается о том, что за грибки, споры, почему они могут быть опасны и почему из-за них пришлось написать целую книгу. Думаю, что стоит обозначить некоторые термины и нюансы. У грибов есть споры – репродуктивные структуры. Именно с помощью них грибки размножаются. Споры устойчивы к различным неблагоприятным факторам среды. Максимально различным. И способны ждать и не прорастать до тех пор, пока не найдут благоприятные для себя условия (счет их "терпения" может идти на десятки лет). "Благоприятными условиями" грибки могут посчитать даже не самые пригодные среды. Например, грибки уже есть на МКС и обитали на российской космической станции "Мир". Также споры при прорастании пускают гифы – нитевидные образования, которые служат в основном для поглощения воды и всяких вкусностей. Книга изобилует примерами из реальной жизни. Это очень хорошо для широкого круга читателей. Один из примеров подробно описывает процесс заражения животных грибками, а также последствия, которые к этому приводят."В большой пещере на склоне горы в Вермонте, на полу, покрытом смесью глины и ила, покоится грибковая спора. Она находится здесь с ранней весны, когда летучие мыши, в основном малые бурые ночницы, начинают перебираться в другие места для ночлега, более подходящие для теплого времени года. Пещера служила им укрытием зимой – здесь они пережидали холода и берегли силы, что особенно важно в условиях нехватки пищи. Спора  будет лежать на полу пещеры и оставаться неповрежденной месяцами, пока летучие мыши не вернутся осенью. Вот и они: снова устраиваются на зимовку, а одна из них, молодая самка, родившаяся ранней весной, пьет воду из лужицы на полу. Она пролетела десятки миль от места, где родилась, и наконец оказалась в этой пещере. Ее крыло касается пола, где покоится спора, и это все, что той нужно, чтобы начать свой путь. Вскоре спора… прорастает и начинает развиваться. Она распускает нитевидные гифы, которые тянутся в поисках пищи. В коже летучей мыши есть кератин – все, что нужно этому грибку для питания."Что же случилось, в двух словах? "Не пей водичку из лужицы – грибочком станешь." Гриб внедряется в ткани летучей мыши, начинает прорастать и в итоге просто съедает носителя. Подобно тому, как опята разрушают древесину. Правда, пока мышка не умрет, она будет долго лазить по пещере, оставляя множество спор. Ниже представлена фотография мышки, пораженной грибком. Он пророс в ней. Белый налет — это мицелий гриба. Вот что происходит с мышью после того, как грибок (Pseudogymnoascus destructans) до нее доберется. Такие примеры хорошо описывают многие экологические процессы и взаимодействия между различными видами. И понятное дело, что это природа, она сурова, каждый кого-то ест. Нюанс то в том, что такая "борьба" является нормой для какого-то локального поля битвы, где в течение долгого времени устанавливалось равновесие между различными биологическими видами. Однако, ввиду определенных действий человека, поле боя может расширяться, и грибки окажутся уже не там, где им следует быть. Они нарушат экологические связи, что приведет к эффекту бабочки. В смысле мышки. Как? ̶Н̶а̶п̶р̶и̶м̶е̶р̶,̶ ̶в̶ы̶ ̶р̶и̶с̶к̶у̶е̶т̶е̶ ̶ш̶о̶к̶и̶р̶о̶в̶а̶т̶ь̶ ̶и̶т̶а̶л̶ь̶я̶н̶ц̶а̶, ̶с̶ъ̶е̶в̶ ̶п̶и̶ц̶ц̶у̶ ̶с̶ ̶а̶н̶а̶н̶а̶с̶а̶м̶и̶. Спора грибка начала путь где-то Европе и оказалась в США. И именно в штатах болезнь выкосила около 6 млн. летучих мышей. Почему такое не произошло в Европе? Просто потому что для этой территории грибок – естественный обитатель. И "местные" летучие мыши попросту бессимптомно переносили грибковую инфекцию или являлись носителями. В таком случае возникает еще больше вопросов и один из них следующий: каким образом спора очутилась в США? Споры способны переносить самые разные условия. И попав однажды на ботинок, одежду, вещи, они могли отправиться в далекое путешествие вместе с любителями исследовать пещеры. "Как и в случае с другими видами инфекционных заболеваний, успех завоевания новой территории зависит от количества инфекционных частиц в сочетании с определенным числом заносов их в новую среду. Многие из этих попыток, скорее всего, окажутся неудачными, потому что если споры не найдут крыло спящей летучей мыши… они останутся погребенными под слоями грязи, будут смыты водой или в конце концов разложатся. Но в нашей ситуации.. спора приземлилась на летучую мышь и начала расти."Как это происходило, что случилось еще с летучими мышами, как боролись с "синдромом белого носа" можно найти на страницах книги. Напоминаю, что в обзоре лишь небольшой экскурс да некоторые примеры. Более того, губительные последствия для экосистем кроются даже в селекционной деятельности человека. Да и в развитии плантаций разнообразных продуктов тоже. Представьте себе, огромные ресурсы тратятся на развитие разнообразия продовольствия. Кажется, что это здорово – разнообразие в питании, возможность попробовать самые странные продукты. Даже это ведет к проблемам. Однако не спешите кидать тапками. Разберем и эти вопросы в обзоре. Часть I. ПоследствияПервая часть делится на 5 глав: "Прибытие", "Вымирание", "Катастрофа", "Продовольствие" и "Ночь". И каждая из глав рассказывает об отдельном событии (или событиях) в жизни человечества, связанным с различными патогенными (которые вызывают заболевания) грибками. Примеров на каждую главу достаточно и каждый расписан подробно, со ссылками на источники. "Прибытие", в первую очередь, глава о том, как распространяются грибки, какую роль мы в этом играем (спойлер: большую). А также о достижениях, за которые пришлось поплатиться. Глава напоминает нам о ковидных временах. И о вспышке еще одного заболевания, которое не было распространено изначально. "Четвертого ноября 2016 года в еженедельном отчете о заболеваемости и смертности Центра по контролю и профилактике заболеваний США появилось упоминание о, вероятно, новом виде инфекции. Хотя ранее о ней не было известно, она проявилась практически одновременно в разных точках мира. Новая инфекция плохо поддавалась диагностике и отличалась высокой смертностью: от 30 до 60 % инфицированных пациентов погибали. Однако даже при правильном диагнозе было трудно предсказать положительный исход для пациента – инфекция почти не поддавалась медикаментозному лечению. Помимо этого, она передавалась от одного пациента к другому, была устойчивой и быстро заражала больничное оборудование и помещения."Здесь идет речь о Candida auris. Это дрожжи – грибы, у которых нет мицелия. Так вот, кандида. Она вызывает заболевания у людей с ослабленным иммунитетом. В норме обитает на человеке. Угадайте с первого раза, в какой момент истории современного человечества она активизировалась максимально? Конечно, во время недавней (хотя прошло 5 лет) пандемии. Кандида просто ждала своего часа, как и многие другие патогены. И затем привела ко множеству летальных исходов в больницах. Пожалуйста, одно из последствий.За все приходится платить. Даже за то, что организм борется с другой болезнью.Трёхмерная визуализация дрожжей Candida auris.За достижения медицины тоже пришлось расплатиться. История та же, что и с резистентностью к антибиотикам. Фунгициды, так уж сложилось, всегда под рукой. В аптеках точно. Однако есть нюанс. Грибки – эукариоты. То есть клетки с ядром. Строение у них не такое, как у бактерий, а ближе к устройству человеческих клеток. Конечно, вы можете возразить, что различий очень много, и будете правы. Однако принципиальное сходство налицо – это наличие оформленного ядра и мембранных органоидов. Дело в том, что относительно легко сделать химический агент, который будет атаковать клетку без ядра. А клетки с ядрами и мембранными органоидами с точки зрения общих механизмов действия очень-очень похожи. Поэтому и воздействие будет тотальное на все. Это меняет практически всю суть по поиску новых фунгицидов, механизмов и многому другому. Также ввиду того, что фармацевтическая промышленность достаточно развита, мы имеем доступ к лечению практически в любой момент нашей жизни. Кажется, что это хорошо. Вот только наша иммунная система, как и мы с вами, стремится искать путь сохранения ресурсов и энергии. Ей нет смысла постоянно поддерживать себя в боевой готовности, когда любую болезнь мы уничтожим раньше, чем иммунная система проведет мобилизацию. «Испытаний в боевых условиях» нет или их становится меньше, и как итог наша иммунная система уже не такая крутая. Так мы расплачиваемся за хороший уровень медицины – депрессия иммунитета. Грибкам – просто раздолье.Грибки уже привели к полному или частичному вымиранию часть видов. Да, некоторые виды прекратили существовать из-за этих микроскопических патогенов. Но они не добрались до людей. Пока что. И тут мы переходим к главе "вымирание". Центральный пример здесь – шпорцевые лягушки. И помимо общей ветки примеров и опасности территориального переселения животных со своей  микробиотой мы можем узнать множество интересных фактов и БУКВАЛЬНО отследить расследование вымирания. Шпорцевые лягушки водились в Африке и жили счастливо. Выглядят они достаточно нелепо (но по мнению автора обзора просто офигенно). Кстати, вот. Шпорцевая лягушкаОсобенность этих лягушек была в том, что их использовали для определения беременности. Один ученый по имени Хогбен изучал влияние гормонов гипофиза на состояние кожи амфибий, а гладкая шпорцевая лягушка меняла цвет в зависимости от условий окружающей среды. Она могла быть настолько темной, что казалась почти черной, или настолько бледной, что ее можно было посчитать белой. Когда Хогбен удалил у нескольких особей гипофиз…они остались практически белыми. Решив подкрепить полученный результат дополнительными данными, Хогбен ввел самке лягушки гормоны гипофиза, полученные от быка, в качестве своеобразной гормональной замены. Она, в свою очередь, выпустила яйца. При этом не имело значения, находился ли рядом самец, чтобы стимулировать процесс метания икры, — гормон быка побудил лягушку к овуляции. В 1931 году Хогбен и его коллеги опубликовали результаты исследования функции гипофиза и яичников у гладких шпорцевых лягушек, а спустя некоторое время ученые определили, что хорионический гонадотропин человека, известный как ХГЧ, способен вызывать овуляцию у лягушек. Этот гормон циркулирует в крови беременных женщин, а еще легко обнаруживается в моче. Сделанное учеными открытие привело к тому, что лягушек стали широко использовать для определения беременности, а этот способ в итоге получил название «тест Хогбена»Ранее для определения беременности приходилось схожие манипуляции проделывать с кроликами, после ждать несколько суток, убивать и вскрывать этих животных. Далее смотрели, увеличенные яичники или нет и только тогда делали заключение. Лягушек же можно повторно использовать и содержать в аквариумах. Люди их скупали в таких количествах, что в Африке стало не хватать производственных мощностей и платили людям за каждую выловленную в естественной среде амфибию. А потом амфибий стали выбрасывать. Находить в американских и европейских озерах да прудах. Как знаете, сейчас такое делают с красноухими черепахами (это очень плохо).Угадаете, чем это все обернулось? Хитридный грибок от шпорцевой лягушки выкосил местных желтоногих лягушек в Америке на 90%. К слову, распространяются патогенные грибки легко и незаметно. Может только казаться, что все хорошо. А на деле уже многие организмы заражены и медленно умирают. Внешние симптомы могут слабо проявляться, а сам грибок может попросту не идентифицироваться. И это только пример вымирания, когда одно животное перевезли из свойственной ему среды в новую. На деле все масштабнее. Масштабы такие, что вполне могут привести к катастрофе. Ведь масштабы обмена "экзотическими" животными, растениями огромен. Как думаете, насколько хорошо контролируется наличие заболеваний? При нынешнем уровне развития должно быть хорошо. Однако достаточно сказать о том, что часть (и достаточно большая) микроорганизмов не изучена, а еще часть из известных имеет некультивируемые формы. Мы не можем вырастить их в чашке Петри или еще как-то, поэтому (во многих случаях) не можем изучить их. Но знаем, что они есть (откуда знаем – вопрос отдельных статей). И что делать? Проверять только на известные инфекции тоже не панацея. Инфекция становится известной тогда, когда ее изучают. Изучают тогда, когда она проявляет себя.Да и что говорить, если только в нашем кишечнике порядка 2-3 кг микроорганизмов, а видов их  порядка пары десятков тысяч (и не все изучены). И да, у разных народов в зависимости от диеты и прочего они разные. "Смерть любого животного, если она приобретает массовый характер, отражается на экосистеме, поскольку отсутствие одного звена будет сказываться на связях, сложившихся много веков назад. Воздействие грибка на дикие виды…– это катастрофа, масштаб которой большинство из нас не могут представить, а многие просто игнорируют. Но когда грибок поразит ряд величественных деревьев, веками стоявших вдоль центральной улицы вашего города, или превратит пышный зеленый лес в постапокалиптический пейзаж…не замечать этого будет гораздо сложнее."Это Катастрофа. И именно о ней рассказывает следующая, третья глава. Причем, на удивление, здесь нет примера эпидемий животных. Здесь о заболеваниях растений. Обычно болезни растений не особо привлекают внимание. Ну, заболела от пузырчатой ржавчины сосна да ель, и что? Дело здесь в том же, что и указывалось выше – уничтожение вида ведет к нарушению экологической системы. В некоторых случаях это ведет к катастрофам. Просто представьте, что начнут заболевать растения, которые мы постоянно употребляем в пищу? Будет очень нехорошо. Перейти только на мясо? Здорово, но количество растительноядных животных также уменьшится, и не потому, что мы вдруг стали их больше есть. В общем, это намёк на предостережение о всемирном голоде и экологической катастрофе. Этот намек переходит в главу "продовольствие". К слову, мы сами неплохо устраиваем экологические катастрофы в попытках помочь. Например, в книге описан случай борьбы с пузырчатой ржавчиной сосны. Болезнь сильно подкосила леса Америки. А у грибка-патогена есть альтернативный хозяин – Ribes (смородина, крыжовник и иже с ними). Угадайте, каким способом решили бороться с болячкой? Уничтожить всех альтернативных хозяев вблизи сосен.Глава продовольствия "построена" на примере бананов. Бананы объединяют мир. Возможно, не все люди едят один и тот же сорт, но каждый, безусловно, узнает бананы, где бы ни встретил их на нашей планете. Здесь освещается, конечно, еще одна борьба с грибком. Однако более того, проблему как оказалось можно было предотвратить. Достаточно было просто высаживать на конкретной плантации различные сорта бананов, а не сплошь один сорт. Тогда появился бы барьер для грибка. Выработать более "общий" механизм заражения для нескольких сортов сложнее, нежели убивать последовательно один. Однако производителям хочется продавать то, что приносит больше выручки. Соответственно, одним сортом засеяли несколько плантаций, что стало настоящей сказкой для грибка. Проблема также в селекции. В норме у нас росли определенные растения да жили определенные животные. Но можно же сделать вкуснее, сочнее (вы когда-нибудь мечтали стать лучшей версией себя?). Это невероятный плюс. Однако гены, ответственные за условную сочность, яркость цвета и оное могут быть связаны с генами устойчивости к грибкам. То есть представьте, есть выбор: высадить устойчивый к болезням банан, но маленький, тонкий и горьковатый или неустойчивый, но большой и сладкий. Здесь выбор оказался таким, как вы видите его в магазинах. Итог выбора в пользу лучших вкусовых качеств и единообразия выращивания лучше всего опишет песня того времени: ОбложкаПосле всего рассказанного наступает глава "Ночь". "Ночь" возвращает нас к летучим мышам, что были во введении. Здесь начинается и детально описывается все детективное расследование, которое велось в поисках переносчика грибка в новые места где он смог начать заражать организмы, которые не устойчивы к нему. Ну и детальное описание гибели мыши во всех красках и подробностях. Думаю, не стоит останавливаться на этой главе, все прелести биологического тру-крайма лучше опишет книга.Как только мы узнаем о нынешних и возможных последствиях, очевидно, нужно искать пути спасения – о чем и повествует вторая часть. Часть II. Пути спасенияДанная часть книги также разбита на главы: "Сопротивление", "Биоразнообразие", "Воскресение", "Сертификация" и "Ответственность". Уже по самим названиям можно догадаться о смысле путей. Я лишь уточню некоторые из них. Сопротивление. Глава, повествующая о том, что необходимо искать пути, препятствующие поражающему действию грибков. Причем речь идет не о том, что могут делать сами живые существа, а о том, что могут делать достижения науки. Сопротивляться можно различными способами. В том числе и посредством выведения новых сортов или даже видов живых организмов, устойчивых к грибку. Это можно делать как с помощью селекции, так и с помощью генетических модификаций. (обозначу, что селекция тоже своего рода генная модификация). Но не все бывает гладко. В большинстве случаев "новые" растения, например, либо устойчивы, но не сохраняют нужные качества, либо наоборот. Но людей не покидает надежда. Возможно, многие, кто сейчас работает над такого рода проектами даже не доживут до первых положительных результатов. Так, вряд ли доживут селекционеры каштанов. Только на один селекционный цикл (то есть получение первого поколения от родителей, отбор, проверка семян, получение саженцев и т.д.) может уйти несколько лет. А что по проверке успешности селекции? Расти дерево до своей зрелости будет долго. Если не погибнет от грибка раньше. Вторым вариантом пути спасения становится биоразнообразие. Это отсылка к тому самому примеру с бананами. Необходимо генетическое разнообразие, то бишь различные сорта растений. Чем их будет больше, тем труднее будет грибку пробраться и заразить всех. Просто потому что все разные. Да, патоген будет мутировать, возможно даже заражать несколько сортов, но далеко не все. Также к биоразнообразию относятся все различные виды растений. Тут может возникнуть вопрос: так зачем вы из транспортировки экзотических растений строите проблему? Различные виды должны быть. Но свойственные конкретной территории. Плюс космополиты. Для сохранения биоразнообразия продовольствия (растений) было даже создано хранилище судного дня. Звучит величественно (опустим официальное "всемирное семенохранилище", потому что это звучит не так круто). Выглядит, к слову так же, смотрите:Хранилище судного дняВ этом хранилище находится 860000 различных семян. Все для того, чтобы при случайной катастрофе человечество смогло высадить необходимые растения, получить урожай и не умереть от голода. Помимо семян здесь хранятся черенки, клубни и многое другое. Все погружено в вечный морозный сон – в криотанки. Это сосуды с жидким азотом. Сама коллекция постоянно пересевается и обновляется. Также используется в научных целях. Для селекции. Для генных модификаций. Для поиска того самого баланса устойчивости и вкуса.Такой вот путь сохранения биоразнообразия. Подробное описание строения хранилища, а также рассказы о генетических манипуляцях можно отыскать в этой главе. Путь воскресения. Звучит непонятно? Тогда вот вам лонг и книга  о том, как пытаются воскресить мамонта и насколько это возможно. Воскрешением вымирающих и вымерших видов занимаются селекционеры да генетики (с привлечением биоинформатиков). В их руках CRISPR/Cas9, огромное количество гибридов и необъятные поля для высадки. Задача – найти оптимальное сочетание генов для придания устойчивости умирающему виду. Уже об этом упоминалось. На страницах книги же разворачивается целое исследование от отбора семян до высадки и заражения саженцев. Сертификация. С одной стороны, вариант понятный и нужный. С другой, он может быть совершенно ненадежным. Сертифицировать автор книги предлагает организмы, въезжающие в страну и не являющиеся носителями патогенов. Ура, больше никаких случайных переносов грибков. Конечно. Проверить наличие буквально всех патогенов не получится. Поэтому на данном этапе проверяют только самых известных. И да, никто не знает, в какой момент какая-нибудь условная дрожжа, которая не была "плохой", решит захватить страну, а то и континент. Или весь мир. Ко всем вышеперечисленным путям добавляется главный – ответственность. Только сознательное и ответственное отношение ко всей ситуации может помочь предотвратить эпидемии и пандемии грибков или иметь от них минимальные последствия. Однако не все хотят этим заниматься: кому-то попросту неинтересно, кто-то хочет других выгод и многое другое. Наши действия или бездействие..однажды могут отразиться и на научном прогрессе страны…Мы все: сосны, летучие мыши, лягушки и множество других видов —  живем в одной маленькой лодке, которая называется "Земля". И наш моральный долг —  остановить дальнейшее вымирание биоразнообразия планеты. Спасая других, мы спасаем и себя. ЗаключениеКнига хороша своим художественным стилем и сохранением баланса между увлекательностью и достоверностью сведений. Отдельно можно отметить огромный плюс книги – на все даются ссылки на научные исследования с пояснениями, о чем пойдет речь. Это выделено в список примечаний и дополняется списком рекомендуемой литературы. Она не будет тяжелой для восприятия, да и особо углубленный уровень знания микробиологии не понадобится. Это будет небольшое путешествие в (микро)биологический мир с нотками детектива, тру-крайма и познавательных фактов. Книгу можно приобрести в издательстве Питер. P.S. Научно-популярная литература на деле сложна в написании, поскольку лишним упрощением можно исказить факт. При этом она не должна быть слишком сложна для понимания. На мой взгляд, здесь как раз история качественного, местами эмоционального, научпопа. В общем, хорошее занятие на новогодние каникулы. Реклама. ООО «Мейл Плюс» ИНН 7802524386
****************************************

Дата вызова функции: 2025-01-14 22:31:20
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/873562/',), {}
Возвращаемое значение функции: Как повлияет развитие нейросетей и робототехники на рынок труда? Появится ли в ближайшие годы настоящий сильный ИИ? Если сильный ИИ появится - захочет ли он уничтожить человечество? Не используют ли власти большинства стран нейросети, ИИ и робототехнику для того, чтобы реализовать на своих территориях оруэлловскую антиутопию?Все эти без сомнения важные вопросы не раз еще затронут в своих статьях какие-нибудь другие авторы. Я же хотел бы затронуть здесь действительно важную тему – то, что человечеству как цивилизации осталось существовать не более пятидесяти лет.В пределах пятидесяти лет не останется в живых не только сегодняшних читателей данной статьи, но и их гипотетических детей, внуков и правнуков. Будет истреблено практически все население нашей планеты, за исключением отдельных особей, в количествах на уровне статистической погрешности. И истребит человечество, вероятнее всего, не случайный астероид, не гамма-излучение из космоса и не внезапно проснувшийся Ктулху. Инициаторами и реализаторами истребления человечества будут отдельные его представители.У любого события имеются предпосылки и триггеры. Предпосылкой грядущего уничтожения цивилизации является вся история человечества. Триггером же упомянутых мной событий будут определенные достижения в развитии робототехники, химии, медицины. Как только медицинские технологии смогут существенно продлевать срок человеческой жизни, что позволит выйти на этап «продлеваемого бессмертия» (когда регулярные медицинские вмешательства будут перманентно отодвигать биологическую смерть), тогда и произойдет апокалипсис.Логика грядущих событий проста: В прогнозируемые сроки медицина не превратится в магию, соответственно «бессмертие» будет достигаться путем многочисленных и сложных манипуляций. Проводить такие манипуляции для миллиардов живущих на земле людей даже теоретически будет невозможно. А фактически – эти манипуляции будут доступны лишь незначительному количеству богатейших представителей человечества. В результате возникнет сложная социальная ситуация – в новой эпохе «элиты» смогут бесконечно продлевать свою сверхкомфортную, качественную и здоровую жизнь, а все остальное человечество будет жить по правилам прошлой эпохи – с лишениями, болезнями, старостью и неизбежной смертью.В результате, в социуме будут появляться существенные факторы напряжения, ведущие к высокой вероятности возникновения революционных волнений направленных против «элит».Продолжая изложенную логическую цепочку, можно спрогнозировать два варианта развития событий после достижения точки невозврата (работоспособного «продлеваемого бессмертия»):Первый вариант – кто-то из «элит» в соло, или в кооперации с другими представителями своего класса, имея на руках прогноз развития социума, осознавая крайне высокие риски потери своего статуса и жизни, запустит апокалипсис. Вероятнее всего, будет использовано вирусное/бактериологическое оружие. Предполагаю, что уже на данный момент в каких-то биолабораториях есть варианты «окончательного решения проблемы «плебса»», какой-нибудь воздушно-капельный вариант бешенства, с высокой вирулентностью, с длинным мало-симптомным инкубационным периодом и короткой-активной фазой с около-стопроцентной смертью. И не реализуются эти варианты лишь по той причине, что без «плебса» текущие «элиты» пока не могут существовать. Но что, если технологии позволят заменить руки рабочих и крестьян?Второй – революция все же произойдет, доступ к технологиям бессмертия получат новые «элиты», бывшие революционные лидеры. В дальнейшем, или эти новые «элиты», или «элиты» из другой, не затронутой революцией локации, увидев воочию все риски для своего бессмертия и бессмертия своих близких, запустят апокалипсис.Вопросы и выводы:Причем здесь нейросети и робототехника?Робототехника сделает прежде недоступные хирургические манипуляции доступными. Роботы хирурги будут проводить операции со скоростью и точностью запредельными для хирургов человеческого происхождения. Мини-боты позволят проводить точечные вмешательства неинвазивно. Можно будет выращивать любые органы из клеток реципиента. Можно будет генетически модифицировать клетки уже выросших тканей. Можно будет, в крайнем случае, пересаживать голову на выращенное в автоклаве клонированное тело.Робототехника поможет заменить руки рабочих на производствах и обслуживании.Нейросети помогут в управлении робототехникой, создании новой химии, а также ускорят развитие генетической инженерии.Нейросети с робототехникой помогут сохранить контроль над ключевыми отраслями в условиях апокалипсиса.И робототехника и нейросети помогут дочистить землю от остатков недобитого человечества, а также позволят успешно контролировать рабов/обслугу новых «элит», постапокалиптического будущего. Рабы для этих «элит» в функциональном плане будут, вероятнее всего, не нужны – роботы надежнее, но животную часть вытравить из себя они не успеют, да и не захотят, поэтому потребность доминировать над кем-то останется. Новых рабов надежнее будет выращивать искусственными методами – в инкубаторах. Скорее всего этих рабов будут генетически и технически модифицировать, для повышения контроля над их деятельностью.Есть ли шанс на позитивный для человечества вариант будущего? На мой взгляд – нет. Быть может, произойдет частичный апокалипсис военного или природного типа до достижения человечеством технологий «продлеваемого бессмертия», тогда итоговый апокалипсис отодвинется во времени на какой-то срок, но вышеописанные события все равно в итоге произойдут, только немного позже. Быть может, «элиты», которые устроят итоговый апокалипсис, не смогут все предусмотреть и уничтожат в том числе и себя. Быть может, постапокалиптические «элиты» перегрызутся друг с другом и самоуничтожатся таким образом. Быть может, прилетит что-нибудь существенное из космоса и добьет микро-остатки законсервированной цивилизации. Быть может, развитие медицинских технологий и перемещение «элитами» остальной части человечества в глобальный концлагерь, будут происходить параллельно какое-то время. Но в итоге, после достижении практического бессмертия, «элиты» все равно захотят усилить контроль, а контролировать проще малое количество элементов, из чего вытечет возврат к изначальному сценарию – уничтожению большей части человечества.Но можно ли какой-то их этих вариантов будущего засчитать за хэппиэнд?Поможет ли гипотетическое появление «цифрового бессмертия» избежать данных мрачных прогнозов? Нет. Даже если копирование/перенос личностей на «железо» станет достижимо – во-первых, это будут, скорее всего, лишь копии разумов мясных людей, а не оригиналы. Во-вторых, сервера, как бы хорошо они не охранялись, уничтожить намного проще, чем популяцию, распределенную на поверхности реальной физической территории. В-третьих, над цифровыми людьми слишком много контроля, поэтому слишком просто безнаказанно измываться, а значит это вероятнее всего и будет происходить.Итог: Человечество обречено. Закат человечества близок настолько, что увидеть его смогут уже существующие на данный момент люди. Спасти человечество может только внешнее вмешательство и внешний контроль, но вероятность таких обстоятельств очевидно около нулевая. Решений данной проблемы не видно. Теоретически мог бы помочь запрет дальнейшего развития медицинских технологий, направленных на значимое продление жизни, но такой запрет, даже если его кто-то и озвучит, никто из ключевых игроков выполнять не будет.P.s. Если шансов на благополучный исход нет, зачем эта статья? Надежда умирает последней...
****************************************

Дата вызова функции: 2025-01-14 22:31:20
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/companies/mws/articles/873560/',), {}
Возвращаемое значение функции: Работа с большими языковыми моделями не только требует серьезных вычислительных ресурсов (например, облачных GPU), но и грамотного их использования. Зачастую инженерам приходится учитывать специфические особенности работы GPU-кластеров.Сегодня обсудим примечательные материалы, посвященные работе с большими языковыми моделями (large language models, LLM) в дата-центрах и роли пограничных вычислений в развитии систем ИИ. Расскажем про ключевые находки и выводы.Равномерная загрузка инфраструктуры  В новом исследовании «Characterization of Large Language Model Development in the Datacenter» сотрудники Shanghai AI Laboratory, учёные из Наньянского технологического университета, Пекинского университета и других научных организаций решили глубже изучить проблемы в управлении инфраструктурой в контексте разработки LLM.В течение шести месяцев команда анализировала данные профилирования и мониторинга, статистику, а также журналы событий, связанные с разработкой LLM. Все эти данные собирали на базе собственного дата-центра. Инфраструктура была построена на графических процессорах A100. Для быстрого доступа к данным применялась параллельная файловая система с поддержкой NVMe. Обработку данных и управление тысячами GPU вели с помощью ПО для системной оптимизации — InternEvo.Как заметили исследователи, рабочая нагрузка на инфраструктуру в пайплайне обучения ML-модели распределяется неравномерно. Задачи по предварительному обучению LLM составляли чуть более 3% от объема задач, выполняемых на GPU, при этом они потребляли до 94% доступных вычислительных ресурсов. И, наоборот, оценка качества моделей занимала порядка 90% от общего объема задач, но использовала только 0,8% ресурсов GPU. Более того, на разных этапах работы инфраструктура простаивала.Авторы исследования также зафиксировали распространенные причины аппаратных сбоев. Чаще всего они возникали из-за нарушения сетевого соединения — в 147 случаях (из 2575 за время исследования). Что касается программной части в целом, то здесь наиболее часто возникали ошибки несоответствия типа данных — 620 инцидентов.Инженеры использовали собранную ими информацию и разработали два решения, позволяющие справляться с выявленными сложностями. Первое сокращает число сбоев в работе LLM. Для этого используются эвристические правила, инструменты для поиска неисправных узлов и система автоматического перезапуска обучения с последней сохранённой контрольной точки. Второе решение позволяет своевременно получать информацию о качестве работы модели, помогает оптимизировать нагрузку на GPU.Энергопотребление и мобильные форматы  Методы эффективной работы с GPU в процессе подготовки больших языковых моделей важны, однако не являются единственным предметом обсуждения в этой области. Очевидно, если увеличивать мощность инфраструктуры, возрастает не только сложность управления и равномерной загрузки, но и энергопотребление инфраструктуры. Этот вопрос также рассматривают, причем с применением самой технологии LLM — для повышения отказоустойчивости ЦОД и оптимизации их энергопотребления.  По оценкам авторов одной из подобных научных работ, сочетание LLM с алгоритмами принятия решений позволит снизить энергозатраты на 32%. Для решения этой задачи исследователи представили систему, которая анализирует энергопотребление и оценивает время выполнения вычислений. Специальный алгоритм управляет очередью задач и оптимизирует ресурсы GPU. Тесты показали, что система предоставляет более точные и информативные данные, чем традиционные инструменты планирования. Однако внедрение таких систем — не единственный способ снизить энергозатраты.Некоторые эксперты работают над тем, чтобы вынести вычисления при использовании LLM за пределы ЦОД. Так, исследователи проанализировали современные решения и сложности, связанные с развитием подобных систем. Авторы работы «On-Device Language Models: A Comprehensive Review» провели обзор технологических архитектур и инструментов, которые позволяют оптимизировать модели для работы на мобильных устройствах. Одно из таких решений — фреймворк EdgeShard для инференса. Это — довольно свежий инструмент, который в конце весны этого года представила группа инженеров из Гонконга. Идея состоит в том, чтобы разделить работу с LLM на несколько устройств — как на периферии, так и в облаке (в зависимости от задачи). Другое решение — архитектура Processing-in-Memory. Она позволяет увеличить производительность в 4,5 раза и сократить энергопотребление на 71%, по сравнению с традиционными архитектурами. Что делает её подходящей для инференса LLM на мобильных устройствах с ограниченными ресурсами. В обзор также включены подходы, которые уменьшают количество параметров модели и делят обработку между несколькими моделями разной размерности. Эти решения позволяют запустить LLM на периферии с минимальными потерями производительности, сэкономив память. Направление действительно перспективное в силу того, что LLM стали частью мобильных устройств — они анализируют заметки, организуют файлы, генерируют контекстные ответы в чатах. Но встроить ресурсоёмкую LLM в компактное устройство не так и просто.Автоматизированное управление инфраструктурой  Ожидается, что полноценное развёртывание сетей 6G в отдельных регионах начнётся в 2030-х, поэтому в индустрии постепенно развивают планы миграции. При этом для автоматизации управления высокопроизводительной инфраструктурой потребуются продвинутые решения. С этим также могут помочь большие языковые модели.В научной работе по теме группа инженеров рассмотрела подходы к применению больших языковых моделей в телекоммуникациях. Авторы показали, как LLM может автоматизировать настройку сетей — например, с помощью перевода высокоуровневых политик в исполняемые команды. Учёные также представили систему, которая преобразует пользовательские запросы на естественном языке в дескрипторы сетевых служб. Специалисты отметили и потенциальные сложности в этой области. Так, чтобы использовать LLM в телеком-сфере, модели необходимо обучать на достаточно специфических данных о сетевой архитектуре, протоколах, технологиях передачи и приёма сигналов, а также о характеристиках оборудования. Решить подобного рода задачу способны только крупные телекомы, обладающие экспертизой и существенными сводами профильных данных, достаточных для качественного обучения.В ещё одном недавнем исследовании о применении больших языковых моделей в телекоме исследователи предприняли попытку разработать первые рекомендации по внедрению систем ИИ в отрасли. Так, LLM уже используют для устранения неполадок в сетях передачи данных — например, в анализе журналов и отчетов.Информационная безопасность  Киберзащита становится ещё одной значимой областью, где большие языковые модели находят применение. Например, помогают защищать сети от DDoS-атак. Такое решение представила команда инженеров из Университета Цинхуа при поддержке специалистов из Huawei. Разработанная ими ShieldGPT позволяет идентифицировать подобные угрозы. Ещё один пример — SecureBERT, обученный на 98 тыс. текстов (и 1 млрд слов) о киберугрозах. В его основе — книги, блоги, новости, отчёты, видеоролики с субтитрами, техническая документация и учебные пособия по теме информационной безопасности. Система способна помочь с анализом уязвимостей, классификацией вредоносного кода и фишинговых сообщений. Она также может служить инструментом для анализа киберинцидентах, распознавая неочевидные связи между элементами угроз.В следующий раз мы продолжим обзор свежих исследований в области разработки систем искусственного интеллекта и больших языковых моделей. Рассмотрим работы, направленные на техническую реализацию LLM и вопросы управления такими технологиями. Расскажем, какие подходы предлагают исследователи, чтобы сделать внедрение систем ИИ безопасным (и что по этому поводу говорят регуляторы).
****************************************

Дата вызова функции: 2025-01-14 22:31:20
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/companies/ru_mts/articles/873512/',), {}
Возвращаемое значение функции: С 28 декабря 2024 года Европейский Союз официально ввел новые правила игры на рынке гаджетов. USB-C теперь обязательный стандарт для большинства устройств. Производители адаптируются, потребители радуются унификации, а Apple прощается с Lightning. Как это повлияет на пользователей и электронные отходы?«Пришло время для единого стандарта зарядок», — заявила Европейская комиссия 28 декабря 2024 года. Директива Common Charger, вступившая в силу в Европейском Союзе, разработана для радикального снижения количества устройств девайсов с устаревшими или проприетарными разъемами. Давайте разбираться, что это за новые правила. Только USB-C и ничего большеСогласно Директиве, устройства с перезаряжаемыми съемными или встроенными батареями и поддерживающие проводную зарядку должны быть оснащены портом USB-C. Правила распространяются на все гаджеты, поступившие в продажу или отправленные дистрибьютору после 28 декабря 2024 года. Причем даже в том случае, если их разработка и поставки начались раньше. Получается, что производителям нужно модифицировать модели прошлых лет, если они хотят и дальше продавать свои устройства в Европе.Меры отнюдь не драконовские, как может показаться. Производители получили новые условия не вдруг, для компаний это не неожиданность. Европейский парламент и страны-члены ЕС подавляющим большинством проголосовали за отказ от альтернативных способов зарядки еще три года назад, в 2022 г. Так что времени для адаптации было много. Ну а сейчас все малые и средние портативные электронные устройства, которые продаются в странах ЕС, должны быть совместимы с портами USB-C.Сильнее всего Директива затронула, конечно, Apple. Корпорации пришлось отойти от проприетарного Lightning и начать использовать USB-C. Сопротивлялась компания долгое время, но в итоге подчинилась требованиям европейского законодательства — все-таки рынок Европы большой, уходить с него не хочется. В итоге последние модели iMac поставляются с Magic Keyboard, Magic Mouse и Magic Trackpad с USB-C. После 28 декабря компания прекратила продажу iPhone 14 и iPhone SE с Lightning в ЕС.Для производителей ноутбуков сделали исключение. Им дали больше времени на адаптацию к новым требованиям — до апреля 2026 года. Но все прочие устройства, включая телефоны, планшеты, портативные игровые консоли, компьютерные аксессуары и беспроводные наушники, теперь должны иметь USB-C. Иначе их просто нельзя продавать в Европе. Дроны пока остаются вне рамок директивы, но, вероятно, это вопрос времени.Есть и другие исключения из правил. Например, устройства с одноразовыми батареями (AA, AAA или «таблетки») не подпадают под действие директивы. Тут многим производителям гаджетов для умного дома повезло, поскольку их девайсы именно такие. Исключения предусмотрены и для устройств, заряжающихся внутри кейсов (беспроводные наушники-вкладыши как пример). Но вот сами кейсы должны соответствовать правилам. А еще под действие Директивы не подпадают устройства, которые заряжаются только беспроводным способом, поскольку у них нет коннекторов. Кроме того, гаджет может поддерживать и другие стандарты, например MagSafe или проприетарный разъем. Но только в том случае, если есть и зарядка через USB-C. USB-C-кабель и разъемы (источник)Помимо требования наличия разъема USB-C, Директива обязывает производителей поставлять устройства с «быстрой зарядкой» (более 5 В, 3 А или 15 Вт) с поддержкой стандарта USB Power Delivery (USB PD). То есть любое устройство с этим стандартом можно будет зарядить при помощи любого адаптера с поддержкой USB PD. И никаких больше фирменных технологий — все зарядки подходят ко всем устройствам. Удобно!На упаковке гаджета, продаваемого в Европе, должно быть указано, есть ли в комплекте зарядное устройство. Это тоже отличная новость — автор этой статьи несколько раз уже покупал гаджеты, когда лишь после открытия коробки оказывалось, что зарядки там нет. Мелочь, а неприятно. А еще производитель должен предоставить пользователям данные о минимальной и максимальной мощности, необходимой для зарядки устройства, и поддержке стандарта USB PD. Меньше электронного мусораИсточник Одна из целей Директивы — именно снижение объемов электронных отходов. Тут все логично, ведь у многих из нас до сих пор где-то в ящике стола хранятся позабытые старые зарядки и провода, которые совместимы лишь с определенной моделью гаджета. Часто они не подходят ни к чему другому. Получается, что вышла новая модель смартфона того же производителя — старый адаптер можно выбрасывать. Это не только неудобно, но и наносит серьезный вред экологии. Ежегодно лишь в Европе выбрасывается около 11 000 тонн старых или неиспользованных зарядных устройств. Новые требования ЕС об обязательном внедрении USB-C помогут природе. Во всяком случае, на это хотелось бы надеяться.Анна Каваццини, председатель комитета Европарламента по внутреннему рынку и защите прав потребителей, в заявлении для прессы отметила: «Новые правила призваны решить проблему тонн отходов, ежегодно образующихся в результате выброшенных зарядных устройств, и сэкономить примерно 250 миллионов евро для домохозяйств ЕС за счет отказа от ненужных покупок». Ну а Европарламент будет следить за тем, как производители адаптируются к новым условиям.К сожалению, зарядки — капля в море вредного для природы мусора. Большая, но все же капля. Согласно отчету ООН от 2024 г., в 2022 году в мире было произведено рекордное количество электронных отходов — 62 миллиона тонн, что на 82% больше по сравнению с 2010 годом. При этом менее четверти (22,3%) были официально собраны и переработаны.Так что здесь еще есть над чем поработать. Россия уже прикладывает усилия. С 1 сентября 2023 года в РФ начали действовать новые правила утилизации отходов электронного и электрического оборудования. Согласно им, не менее 85% сдаваемого мусора должно перерабатываться в виде вторичного сырья. По данным Российского экологического оператора (РЭО), в 2022 году в стране образовано около 1,7 млн тонн электронных отходов, это примерно 11 кг на одного человека в год.Хотелось бы надеяться, что в ближайшее время и на эту проблему обратят внимание правительства разных стран — уж слишком много отходов выбрасывается без переработки. Но лиха беда начало, хотя бы за зарядки взялись, и то хорошо.
****************************************

Дата вызова функции: 2025-01-14 22:31:20
Имя функции: get_article_text
Аргументы функции: ('https://habr.com/ru/articles/871344/',), {}
Возвращаемое значение функции: При оценке инструмента управления тестированием важно учесть несколько основных характеристик, которые обеспечат эффективное и точное планирование, исполнение и документирование процесса тестирования. Инструменты для управления тестированием предназначены для координации тестовых процессов, мониторинга выполнения QA-задач и сохранения данных о методиках тестирования. Они обеспечивают командам необходимые возможности для разработки и управления тест-кейсами. Существуют как открытые (open source), так и коммерческие (proprietary) решения, каждое из которых имеет свои преимущества и ограничения. В настоящее время существует множество решений для управления тестированием, и выбрать наиболее подходящее для вашего проекта может быть довольно сложно, учитывая необходимость оценить каждый из доступных вариантов. Мы должны выбирать инструмент управления тестированием, основываясь на требованиях и процессах на наших проектах. Правильный выбор инструмента, адаптированного под нужды проекта, сделает процесс тестирования более эффективным и упростит его поддержку в будущем. План выбора подходящего инструмента управления тестированием:  1 - Определите требования проекта и потребности команды.  2 - Учите ваш бюджет.  3 - Оцените время, необходимое для интеграции и адаптации.  4 - Выделите ключевой функционал, который вам необходим.  5 - Проверьте совместимость выбранных инструментов с уже используемыми вами системами.  Топ-5 особенностей инструментов управления тестированием Каждая платформа управления тестированием должна предоставлять тестовым командам несколько ключевых функций. Ниже перечислены 5 важных особенностей, которые можно учитывать при выборе подходящего инструмента: Простота — Гибкость Освоение инструмента управления тестированием требует времени, так же, как и изучение любой другой темы. Следовательно, качественный инструмент управления тестированием должен быть простым в использовании. Каждый участник команды, от младшего специалиста до старшего, независимо от занимаемой должности, должен легко ориентироваться в инструменте и использовать его без трудностей. Выбранный инструмент должен помогать командам управлять жизненным циклом тестирования программного обеспечения (STLC) от начала до конца. Инструмент должен способствовать этому процессу, будучи простым в использовании и легким для освоения. Идеально, когда новый инструмент внедряется в команду и не требует более пары дней, чтобы ваша команда адаптировалась к его использованию и начала эффективно работать с ним. Интеграция с другими инструментами Сегодня многие команды применяют программы для учета дефектов, такие как Jira, и инструменты для непрерывной интеграции, например, Jenkins. Удостоверьтесь, что выбранные вами инструменты способны интегрироваться с этими системами управления жизненным циклом разработки программного обеспечения (SDLC). К примеру, выбор инструмента, поддерживающего интеграцию с Jira, позволит удобно связывать найденные дефекты с ранами тест-кейсов. Кроме того, нельзя упускать важность автоматизации тестирования, которая позволяет проводить непрерывное тестирование на протяжении всего рабочего процесса CI/CD. Я считаю, что, если выбранный инструмент будет интегрироваться с инструментами автоматизации тестирования, такими как Selenium, это будет значительным преимуществом. К тому же многие инструменты управления тестированием предоставляют открытые API для интеграции и настройки. Интеграция репозитория тестов позволяет использовать другие инструменты, которые уже применяются в команде.  В наше время многие команды активно применяют системы отслеживания дефектов, такие как Jira, и инструменты для непрерывной интеграции, такие как Jenkins. Поэтому важно, чтобы выбранные вами инструменты были совместимы с этими SDLC приложениями. К примеру, если вы выберете инструмент управления тестированием, который интегрируется с Jira, такая интеграция позволит пользователям без труда связывать обнаруженные дефекты с процессами тестирования. Отчетность Особенно гибкие команды, работающие по методологии Agile, могут извлекать практически полезную информацию из отчетов по тестированию, чтобы лучше понимать текущее состояние своих проектов и коммерческую привлекательность своих продуктов. Данные отчеты показывают актуальное состояние хода тестирования в процессе его выполнения. Формируйте пользовательские отчеты по проверкам, багам и результатам тестирования. После этого вы можете экспортировать их в разные форматы. Выберите инструмент управления тестированием, который обеспечивает простоту составления отчетов и не требует значительных усилий для их генерации. Если вы тратите слишком много времени на подготовку отчетов, это может служить сигналом к тому, что пора искать другие решения. Онбординг, Сопровождение и Обучение Предположим, вы подобрали новый инструмент для управления тестированием и планируете его внедрение в работу команды. Вам следует проверить соответствуют ли его функциональные возможности вашим требованиям и доступны ли они вам. При планировании этого времени убедитесь, что выбранный инструмент легко интегрировать в работу и что он сопровождается подробной документацией. Выберите инструмент, который обеспечивает легкое внедрение и предоставляет обучающие ресурсы, которые помогут вам понять его функционал. Наличие понятных инструкций, подробных руководств, однозначных примеров и помощи от сообщества является критически важным. Функции импорта и экспорта данных Функция импорта может не быть на первом месте в вашем списке приоритетов, если вы только начинаете. Тем не менее, возможность импортировать ваши предыдущие тест-кейсы окажется крайне важной, если вы занимались документацией тест-кейсов в течение последнего года, используя таблицы, простые текстовые документы или другие системы управления тестами. Есть несколько ключевых причин, по которым функция экспорта тест-кейсов  является обязательной. Вам должна быть обеспечена возможность экспортировать данные в формате, который можно будет загрузить в другой инструмент, если в будущем вам потребуется перейти на использование других инструментов. Популярные инструменты управления тестированием Вот несколько примеров востребованных инструментов для управления тестированием: TestRail Xray Test Management For Jira Zephyr TestCaseLab TestLink TestLodge Заключение Управление тестированием имеет ключевое значение для каждой организации, стремящейся сделать процесс тестирования программного обеспечения максимально систематизированным и эффективным. Нам необходимо помнить, что требования каждой организации, каждого проекта и даже каждой команды могут отличаться. Единственное общее желание каждой команды - применять передовые технологии, которые повысят продуктивность их работы по тестированию. С правильным набором функций инструмент управления тестированием позволяет командам сосредоточиться на том, что они делают лучше всего. Тщательно определите свои потребности, сравните каждый вариант на основании этих потребностей и уделяйте внимание требованиям каждой структурной единицы организации, проекта и команды. Удачного тестирования!
****************************************

